%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: CdCl_Re180_hd_0_55.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: leo
%%CreationDate: 27/04/2016, 13:30:54
%%BoundingBox: 0 0 256 225
%%HiResBoundingBox: 0 0 255.7500 225
%%CropBox: 0 0 255.7500 225
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 539 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.12.14 (http://cairographics.org)"
   pdf:Producer="cairo 1.12.14 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -225 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 225 li
255.75 225 li
255.75 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 0 mo
255.75 0 li
255.75 225 li
0 225 li
0 0 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
21.309 11.75 mo
241.864 11.75 li
241.864 196.602 li
21.309 196.602 li
cp
.50988 .444709 .414923 .0699168 cmyk
@
21.309 196.102 mo
241.863 196.102 li
242.139 196.102 242.363 196.326 242.363 196.602 cv
242.363 196.878 242.139 197.102 241.863 197.102 cv
21.309 197.102 li
21.0328 197.102 20.809 196.878 20.809 196.602 cv
20.809 196.326 21.0328 196.102 21.309 196.102 cv
21.309 143.289 mo
241.863 143.289 li
242.139 143.289 242.363 143.513 242.363 143.789 cv
242.363 144.065 242.139 144.289 241.863 144.289 cv
21.309 144.289 li
21.0328 144.289 20.809 144.065 20.809 143.789 cv
20.809 143.513 21.0328 143.289 21.309 143.289 cv
21.309 90.473 mo
241.863 90.473 li
242.139 90.473 242.363 90.6969 242.363 90.973 cv
242.363 91.2492 242.139 91.473 241.863 91.473 cv
21.309 91.473 li
21.0328 91.473 20.809 91.2492 20.809 90.973 cv
20.809 90.6969 21.0328 90.473 21.309 90.473 cv
21.309 37.66 mo
241.863 37.66 li
242.139 37.66 242.363 37.8838 242.363 38.16 cv
242.363 38.4362 242.139 38.66 241.863 38.66 cv
21.309 38.66 li
21.0328 38.66 20.809 38.4362 20.809 38.16 cv
20.809 37.8838 21.0328 37.66 21.309 37.66 cv
.251957 .199069 .204257 3.0518e-5 cmyk
f
21.809 11.75 mo
21.809 196.602 li
21.809 196.878 21.5852 197.102 21.309 197.102 cv
21.0328 197.102 20.809 196.878 20.809 196.602 cv
20.809 11.75 li
20.809 11.4739 21.0328 11.25 21.309 11.25 cv
21.5852 11.25 21.809 11.4739 21.809 11.75 cv
51.215 11.75 mo
51.215 196.602 li
51.215 196.878 50.9912 197.102 50.715 197.102 cv
50.4388 197.102 50.215 196.878 50.215 196.602 cv
50.215 11.75 li
50.215 11.4739 50.4388 11.25 50.715 11.25 cv
50.9912 11.25 51.215 11.4739 51.215 11.75 cv
80.621 11.75 mo
80.621 196.602 li
80.621 196.878 80.3972 197.102 80.121 197.102 cv
79.8448 197.102 79.621 196.878 79.621 196.602 cv
79.621 11.75 li
79.621 11.4739 79.8448 11.25 80.121 11.25 cv
80.3972 11.25 80.621 11.4739 80.621 11.75 cv
110.031 11.75 mo
110.031 196.602 li
110.031 196.878 109.807 197.102 109.531 197.102 cv
109.255 197.102 109.031 196.878 109.031 196.602 cv
109.031 11.75 li
109.031 11.4739 109.255 11.25 109.531 11.25 cv
109.807 11.25 110.031 11.4739 110.031 11.75 cv
139.438 11.75 mo
139.438 196.602 li
139.438 196.878 139.214 197.102 138.938 197.102 cv
138.662 197.102 138.438 196.878 138.438 196.602 cv
138.438 11.75 li
138.438 11.4739 138.662 11.25 138.938 11.25 cv
139.214 11.25 139.438 11.4739 139.438 11.75 cv
168.844 11.75 mo
168.844 196.602 li
168.844 196.878 168.62 197.102 168.344 197.102 cv
168.068 197.102 167.844 196.878 167.844 196.602 cv
167.844 11.75 li
167.844 11.4739 168.068 11.25 168.344 11.25 cv
168.62 11.25 168.844 11.4739 168.844 11.75 cv
198.25 11.75 mo
198.25 196.602 li
198.25 196.878 198.026 197.102 197.75 197.102 cv
197.474 197.102 197.25 196.878 197.25 196.602 cv
197.25 11.75 li
197.25 11.4739 197.474 11.25 197.75 11.25 cv
198.026 11.25 198.25 11.4739 198.25 11.75 cv
227.66 11.75 mo
227.66 196.602 li
227.66 196.878 227.436 197.102 227.16 197.102 cv
226.884 197.102 226.66 196.878 226.66 196.602 cv
226.66 11.75 li
226.66 11.4739 226.884 11.25 227.16 11.25 cv
227.436 11.25 227.66 11.4739 227.66 11.75 cv
f
21.309 196.602 mo
241.863 196.602 li
21.309 201.102 mo
21.309 196.602 li
50.715 201.102 mo
50.715 196.602 li
80.121 201.102 mo
80.121 196.602 li
109.531 201.102 mo
109.531 196.602 li
138.938 201.102 mo
138.938 196.602 li
168.344 201.102 mo
168.344 196.602 li
197.75 201.102 mo
197.75 196.602 li
227.16 201.102 mo
227.16 196.602 li
.75021 .679683 .670222 .90164 cmyk
@
18.168 203.531 mo
16.918 203.531 16.293 204.516 16.293 206.453 cv
16.293 207.391 16.465 208.203 16.746 208.594 cv
17.012 208.984 17.465 209.203 17.965 209.203 cv
19.168 209.203 19.777 208.172 19.777 206.125 cv
19.777 204.359 19.262 203.531 18.168 203.531 cv
cp
18.012 203.812 mo
18.793 203.812 19.105 204.594 19.105 206.516 cv
19.105 208.219 18.809 208.922 18.074 208.922 cv
17.293 208.922 16.965 208.125 16.965 206.172 cv
16.965 204.484 17.262 203.812 18.012 203.812 cv
cp
f
21.684 208.062 mo
21.48 208.141 21.324 208.188 20.902 208.297 cv
20.855 208.906 20.652 209.438 20.184 210.203 cv
20.293 210.281 li
20.621 210.141 li
21.277 209.297 21.574 208.797 21.809 208.172 cv
cp
f
24.168 203.531 mo
22.918 203.531 22.293 204.516 22.293 206.453 cv
22.293 207.391 22.465 208.203 22.746 208.594 cv
23.012 208.984 23.465 209.203 23.965 209.203 cv
25.168 209.203 25.777 208.172 25.777 206.125 cv
25.777 204.359 25.262 203.531 24.168 203.531 cv
cp
24.012 203.812 mo
24.793 203.812 25.105 204.594 25.105 206.516 cv
25.105 208.219 24.809 208.922 24.074 208.922 cv
23.293 208.922 22.965 208.125 22.965 206.172 cv
22.965 204.484 23.262 203.812 24.012 203.812 cv
cp
f
47.574 203.531 mo
46.324 203.531 45.699 204.516 45.699 206.453 cv
45.699 207.391 45.871 208.203 46.152 208.594 cv
46.418 208.984 46.871 209.203 47.371 209.203 cv
48.574 209.203 49.184 208.172 49.184 206.125 cv
49.184 204.359 48.668 203.531 47.574 203.531 cv
cp
47.418 203.812 mo
48.199 203.812 48.512 204.594 48.512 206.516 cv
48.512 208.219 48.215 208.922 47.48 208.922 cv
46.699 208.922 46.371 208.125 46.371 206.172 cv
46.371 204.484 46.668 203.812 47.418 203.812 cv
cp
f
51.09 208.062 mo
50.887 208.141 50.73 208.188 50.309 208.297 cv
50.262 208.906 50.059 209.438 49.59 210.203 cv
49.699 210.281 li
50.027 210.141 li
50.684 209.297 50.98 208.797 51.215 208.172 cv
cp
f
52.48 204.203 mo
53.512 204.234 53.965 204.25 54.918 204.25 cv
54.965 204.203 li
54.949 204.062 54.949 204 54.949 203.891 cv
54.949 203.781 54.949 203.719 54.965 203.578 cv
54.918 203.531 li
54.324 203.562 53.965 203.578 53.527 203.578 cv
53.09 203.578 52.73 203.562 52.137 203.531 cv
52.09 203.578 li
52.105 204.062 52.105 204.422 52.105 204.672 cv
52.105 205.344 52.09 206.125 52.059 206.469 cv
52.23 206.516 li
52.605 206.141 52.824 206.031 53.215 206.031 cv
53.98 206.031 54.449 206.578 54.449 207.438 cv
54.449 208.328 53.949 208.844 53.074 208.844 cv
52.637 208.844 52.246 208.703 52.121 208.5 cv
51.762 207.844 li
51.574 207.953 li
51.746 208.406 51.855 208.656 51.965 209.016 cv
52.184 209.141 52.512 209.203 52.855 209.203 cv
53.387 209.203 53.949 208.969 54.387 208.594 cv
54.887 208.156 55.137 207.609 55.137 207.016 cv
55.137 206.125 54.496 205.484 53.574 205.484 cv
53.199 205.484 52.902 205.578 52.402 205.875 cv
cp
f
75.402 204.609 mo
75.48 204.609 li
76.512 204.141 li
76.543 204.141 li
76.59 204.141 76.605 204.203 76.605 204.406 cv
76.605 208.281 li
76.605 208.688 76.512 208.781 76.09 208.812 cv
75.637 208.828 li
75.637 209.078 li
76.871 209.047 76.871 209.047 76.965 209.047 cv
77.059 209.047 77.246 209.047 77.512 209.062 cv
77.605 209.062 77.887 209.062 78.215 209.078 cv
78.215 208.828 li
77.793 208.812 li
77.355 208.781 77.277 208.688 77.277 208.281 cv
77.277 203.531 li
77.168 203.5 li
76.652 203.766 76.074 204 75.355 204.266 cv
cp
f
80.496 208.062 mo
80.293 208.141 80.137 208.188 79.715 208.297 cv
79.668 208.906 79.465 209.438 78.996 210.203 cv
79.105 210.281 li
79.434 210.141 li
80.09 209.297 80.387 208.797 80.621 208.172 cv
cp
f
82.98 203.531 mo
81.73 203.531 81.105 204.516 81.105 206.453 cv
81.105 207.391 81.277 208.203 81.559 208.594 cv
81.824 208.984 82.277 209.203 82.777 209.203 cv
83.98 209.203 84.59 208.172 84.59 206.125 cv
84.59 204.359 84.074 203.531 82.98 203.531 cv
cp
82.824 203.812 mo
83.605 203.812 83.918 204.594 83.918 206.516 cv
83.918 208.219 83.621 208.922 82.887 208.922 cv
82.105 208.922 81.777 208.125 81.777 206.172 cv
81.777 204.484 82.074 203.812 82.824 203.812 cv
cp
f
104.812 204.609 mo
104.891 204.609 li
105.922 204.141 li
105.953 204.141 li
106 204.141 106.016 204.203 106.016 204.406 cv
106.016 208.281 li
106.016 208.688 105.922 208.781 105.5 208.812 cv
105.047 208.828 li
105.047 209.078 li
106.281 209.047 106.281 209.047 106.375 209.047 cv
106.469 209.047 106.656 209.047 106.922 209.062 cv
107.016 209.062 107.297 209.062 107.625 209.078 cv
107.625 208.828 li
107.203 208.812 li
106.766 208.781 106.688 208.688 106.688 208.281 cv
106.688 203.531 li
106.578 203.5 li
106.062 203.766 105.484 204 104.766 204.266 cv
cp
f
109.906 208.062 mo
109.703 208.141 109.547 208.188 109.125 208.297 cv
109.078 208.906 108.875 209.438 108.406 210.203 cv
108.516 210.281 li
108.844 210.141 li
109.5 209.297 109.797 208.797 110.031 208.172 cv
cp
f
111.297 204.203 mo
112.328 204.234 112.781 204.25 113.734 204.25 cv
113.781 204.203 li
113.766 204.062 113.766 204 113.766 203.891 cv
113.766 203.781 113.766 203.719 113.781 203.578 cv
113.734 203.531 li
113.141 203.562 112.781 203.578 112.344 203.578 cv
111.906 203.578 111.547 203.562 110.953 203.531 cv
110.906 203.578 li
110.922 204.062 110.922 204.422 110.922 204.672 cv
110.922 205.344 110.906 206.125 110.875 206.469 cv
111.047 206.516 li
111.422 206.141 111.641 206.031 112.031 206.031 cv
112.797 206.031 113.266 206.578 113.266 207.438 cv
113.266 208.328 112.766 208.844 111.891 208.844 cv
111.453 208.844 111.062 208.703 110.938 208.5 cv
110.578 207.844 li
110.391 207.953 li
110.562 208.406 110.672 208.656 110.781 209.016 cv
111 209.141 111.328 209.203 111.672 209.203 cv
112.203 209.203 112.766 208.969 113.203 208.594 cv
113.703 208.156 113.953 207.609 113.953 207.016 cv
113.953 206.125 113.312 205.484 112.391 205.484 cv
112.016 205.484 111.719 205.578 111.219 205.875 cv
cp
f
133.812 208.859 mo
133.812 209.078 li
135.312 209.047 135.312 209.047 135.594 209.047 cv
135.891 209.047 135.891 209.047 137.438 209.078 cv
137.422 208.906 137.422 208.828 137.422 208.703 cv
137.422 208.609 137.422 208.531 137.438 208.344 cv
136.516 208.391 136.141 208.406 134.656 208.438 cv
136.125 206.891 li
136.891 206.062 137.141 205.625 137.141 205.016 cv
137.141 204.109 136.516 203.531 135.5 203.531 cv
134.922 203.531 134.531 203.688 134.141 204.094 cv
134 205.188 li
134.234 205.188 li
134.328 204.812 li
134.469 204.344 134.75 204.156 135.281 204.156 cv
135.969 204.156 136.422 204.578 136.422 205.266 cv
136.422 205.859 136.078 206.453 135.172 207.422 cv
cp
f
139.312 208.062 mo
139.109 208.141 138.953 208.188 138.531 208.297 cv
138.484 208.906 138.281 209.438 137.812 210.203 cv
137.922 210.281 li
138.25 210.141 li
138.906 209.297 139.203 208.797 139.438 208.172 cv
cp
f
141.797 203.531 mo
140.547 203.531 139.922 204.516 139.922 206.453 cv
139.922 207.391 140.094 208.203 140.375 208.594 cv
140.641 208.984 141.094 209.203 141.594 209.203 cv
142.797 209.203 143.406 208.172 143.406 206.125 cv
143.406 204.359 142.891 203.531 141.797 203.531 cv
cp
141.641 203.812 mo
142.422 203.812 142.734 204.594 142.734 206.516 cv
142.734 208.219 142.438 208.922 141.703 208.922 cv
140.922 208.922 140.594 208.125 140.594 206.172 cv
140.594 204.484 140.891 203.812 141.641 203.812 cv
cp
f
163.219 208.859 mo
163.219 209.078 li
164.719 209.047 164.719 209.047 165 209.047 cv
165.297 209.047 165.297 209.047 166.844 209.078 cv
166.828 208.906 166.828 208.828 166.828 208.703 cv
166.828 208.609 166.828 208.531 166.844 208.344 cv
165.922 208.391 165.547 208.406 164.062 208.438 cv
165.531 206.891 li
166.297 206.062 166.547 205.625 166.547 205.016 cv
166.547 204.109 165.922 203.531 164.906 203.531 cv
164.328 203.531 163.938 203.688 163.547 204.094 cv
163.406 205.188 li
163.641 205.188 li
163.734 204.812 li
163.875 204.344 164.156 204.156 164.688 204.156 cv
165.375 204.156 165.828 204.578 165.828 205.266 cv
165.828 205.859 165.484 206.453 164.578 207.422 cv
cp
f
168.719 208.062 mo
168.516 208.141 168.359 208.188 167.938 208.297 cv
167.891 208.906 167.688 209.438 167.219 210.203 cv
167.328 210.281 li
167.656 210.141 li
168.312 209.297 168.609 208.797 168.844 208.172 cv
cp
f
170.109 204.203 mo
171.141 204.234 171.594 204.25 172.547 204.25 cv
172.594 204.203 li
172.578 204.062 172.578 204 172.578 203.891 cv
172.578 203.781 172.578 203.719 172.594 203.578 cv
172.547 203.531 li
171.953 203.562 171.594 203.578 171.156 203.578 cv
170.719 203.578 170.359 203.562 169.766 203.531 cv
169.719 203.578 li
169.734 204.062 169.734 204.422 169.734 204.672 cv
169.734 205.344 169.719 206.125 169.688 206.469 cv
169.859 206.516 li
170.234 206.141 170.453 206.031 170.844 206.031 cv
171.609 206.031 172.078 206.578 172.078 207.438 cv
172.078 208.328 171.578 208.844 170.703 208.844 cv
170.266 208.844 169.875 208.703 169.75 208.5 cv
169.391 207.844 li
169.203 207.953 li
169.375 208.406 169.484 208.656 169.594 209.016 cv
169.812 209.141 170.141 209.203 170.484 209.203 cv
171.016 209.203 171.578 208.969 172.016 208.594 cv
172.516 208.156 172.766 207.609 172.766 207.016 cv
172.766 206.125 172.125 205.484 171.203 205.484 cv
170.828 205.484 170.531 205.578 170.031 205.875 cv
cp
f
192.844 205.062 mo
193.094 205.062 li
193.234 204.609 li
193.328 204.344 193.828 204.078 194.25 204.078 cv
194.766 204.078 195.188 204.5 195.188 205 cv
195.188 205.594 194.719 206.109 194.141 206.109 cv
194.078 206.109 194 206.094 193.891 206.094 cv
193.766 206.078 li
193.672 206.5 li
193.734 206.547 li
194.031 206.422 194.188 206.375 194.406 206.375 cv
195.062 206.375 195.453 206.797 195.453 207.531 cv
195.453 208.344 194.969 208.875 194.219 208.875 cv
193.859 208.875 193.531 208.766 193.281 208.531 cv
193.094 208.359 192.984 208.172 192.844 207.75 cv
192.625 207.828 li
192.781 208.312 192.859 208.594 192.906 209 cv
193.328 209.141 193.672 209.203 193.969 209.203 cv
194.609 209.203 195.344 208.844 195.781 208.312 cv
196.062 207.984 196.203 207.625 196.203 207.25 cv
196.203 206.875 196.031 206.531 195.75 206.328 cv
195.547 206.188 195.359 206.125 194.969 206.062 cv
195.609 205.562 195.844 205.188 195.844 204.719 cv
195.844 204 195.25 203.531 194.359 203.531 cv
193.812 203.531 193.453 203.688 193.078 204.078 cv
cp
f
198.125 208.062 mo
197.922 208.141 197.766 208.188 197.344 208.297 cv
197.297 208.906 197.094 209.438 196.625 210.203 cv
196.734 210.281 li
197.062 210.141 li
197.719 209.297 198.016 208.797 198.25 208.172 cv
cp
f
200.609 203.531 mo
199.359 203.531 198.734 204.516 198.734 206.453 cv
198.734 207.391 198.906 208.203 199.188 208.594 cv
199.453 208.984 199.906 209.203 200.406 209.203 cv
201.609 209.203 202.219 208.172 202.219 206.125 cv
202.219 204.359 201.703 203.531 200.609 203.531 cv
cp
200.453 203.812 mo
201.234 203.812 201.547 204.594 201.547 206.516 cv
201.547 208.219 201.25 208.922 200.516 208.922 cv
199.734 208.922 199.406 208.125 199.406 206.172 cv
199.406 204.484 199.703 203.812 200.453 203.812 cv
cp
f
222.254 205.062 mo
222.504 205.062 li
222.645 204.609 li
222.738 204.344 223.238 204.078 223.66 204.078 cv
224.176 204.078 224.598 204.5 224.598 205 cv
224.598 205.594 224.129 206.109 223.551 206.109 cv
223.488 206.109 223.41 206.094 223.301 206.094 cv
223.176 206.078 li
223.082 206.5 li
223.145 206.547 li
223.441 206.422 223.598 206.375 223.816 206.375 cv
224.473 206.375 224.863 206.797 224.863 207.531 cv
224.863 208.344 224.379 208.875 223.629 208.875 cv
223.27 208.875 222.941 208.766 222.691 208.531 cv
222.504 208.359 222.395 208.172 222.254 207.75 cv
222.035 207.828 li
222.191 208.312 222.27 208.594 222.316 209 cv
222.738 209.141 223.082 209.203 223.379 209.203 cv
224.02 209.203 224.754 208.844 225.191 208.312 cv
225.473 207.984 225.613 207.625 225.613 207.25 cv
225.613 206.875 225.441 206.531 225.16 206.328 cv
224.957 206.188 224.77 206.125 224.379 206.062 cv
225.02 205.562 225.254 205.188 225.254 204.719 cv
225.254 204 224.66 203.531 223.77 203.531 cv
223.223 203.531 222.863 203.688 222.488 204.078 cv
cp
f
227.535 208.062 mo
227.332 208.141 227.176 208.188 226.754 208.297 cv
226.707 208.906 226.504 209.438 226.035 210.203 cv
226.145 210.281 li
226.473 210.141 li
227.129 209.297 227.426 208.797 227.66 208.172 cv
cp
f
228.926 204.203 mo
229.957 204.234 230.41 204.25 231.363 204.25 cv
231.41 204.203 li
231.395 204.062 231.395 204 231.395 203.891 cv
231.395 203.781 231.395 203.719 231.41 203.578 cv
231.363 203.531 li
230.77 203.562 230.41 203.578 229.973 203.578 cv
229.535 203.578 229.176 203.562 228.582 203.531 cv
228.535 203.578 li
228.551 204.062 228.551 204.422 228.551 204.672 cv
228.551 205.344 228.535 206.125 228.504 206.469 cv
228.676 206.516 li
229.051 206.141 229.27 206.031 229.66 206.031 cv
230.426 206.031 230.895 206.578 230.895 207.438 cv
230.895 208.328 230.395 208.844 229.52 208.844 cv
229.082 208.844 228.691 208.703 228.566 208.5 cv
228.207 207.844 li
228.02 207.953 li
228.191 208.406 228.301 208.656 228.41 209.016 cv
228.629 209.141 228.957 209.203 229.301 209.203 cv
229.832 209.203 230.395 208.969 230.832 208.594 cv
231.332 208.156 231.582 207.609 231.582 207.016 cv
231.582 206.125 230.941 205.484 230.02 205.484 cv
229.645 205.484 229.348 205.578 228.848 205.875 cv
cp
f
119.629 218.527 mo
119.848 218.512 120.082 218.496 120.441 218.496 cv
121.035 218.496 121.254 218.527 121.395 218.59 cv
121.457 218.793 li
121.504 219.262 li
121.738 219.262 li
121.723 218.527 121.723 218.527 121.723 218.371 cv
121.723 218.246 121.723 218.246 121.738 217.449 cv
121.504 217.449 li
121.457 217.871 li
121.395 218.074 li
121.254 218.137 121.035 218.168 120.504 218.168 cv
120.16 218.168 119.895 218.152 119.629 218.137 cv
119.629 215.996 li
119.863 215.949 120.004 215.934 120.473 215.934 cv
120.863 215.934 121.316 215.98 121.551 216.043 cv
121.754 216.09 121.77 216.137 121.77 216.324 cv
121.77 216.84 li
122.051 216.84 li
122.051 216.355 122.098 215.98 122.176 215.621 cv
121.785 215.605 121.551 215.605 121.207 215.605 cv
120.348 215.605 li
119.957 215.621 119.676 215.621 119.473 215.621 cv
119.254 215.621 119.254 215.621 118.066 215.605 cv
118.066 215.84 li
118.457 215.871 li
118.816 215.887 118.863 215.949 118.863 216.59 cv
118.863 220.184 li
118.863 220.809 118.816 220.871 118.457 220.902 cv
118.066 220.918 li
118.066 221.168 li
118.535 221.152 118.816 221.137 119.238 221.137 cv
119.66 221.137 119.941 221.152 120.41 221.168 cv
120.41 220.918 li
120.035 220.902 li
119.66 220.871 119.629 220.809 119.629 220.184 cv
cp
f
122.531 217.934 mo
122.828 217.934 li
123.141 217.934 123.172 217.996 123.172 218.527 cv
123.172 220.324 li
123.172 220.824 123.156 220.887 122.875 220.902 cv
122.516 220.918 li
122.516 221.168 li
123.094 221.152 123.297 221.137 123.5 221.137 cv
123.656 221.137 123.656 221.137 124.641 221.168 cv
124.641 220.918 li
124.219 220.902 li
123.859 220.871 123.844 220.855 123.844 220.324 cv
123.844 218.949 li
123.844 218.465 124.172 218.059 124.562 218.059 cv
124.797 218.059 124.969 218.184 125.094 218.434 cv
125.266 218.434 li
125.328 217.48 li
125.25 217.418 125.109 217.387 124.953 217.387 cv
124.719 217.387 124.469 217.512 124.297 217.715 cv
123.844 218.246 li
123.844 217.418 li
123.781 217.387 li
123.375 217.559 122.953 217.668 122.531 217.715 cv
cp
f
127.738 217.387 mo
126.566 217.387 125.754 218.215 125.754 219.402 cv
125.754 220.527 126.473 221.293 127.504 221.293 cv
128.738 221.293 129.613 220.434 129.613 219.246 cv
129.613 218.168 128.832 217.387 127.738 217.387 cv
cp
127.598 217.652 mo
128.332 217.652 128.879 218.449 128.879 219.543 cv
128.879 220.449 128.457 221.027 127.816 221.027 cv
127.035 221.027 126.504 220.262 126.504 219.121 cv
126.504 218.168 126.895 217.652 127.598 217.652 cv
cp
f
133.902 217.418 mo
133.824 217.387 li
133.418 217.559 132.996 217.668 132.574 217.715 cv
132.574 217.934 li
132.871 217.934 li
133.184 217.934 133.23 217.996 133.23 218.527 cv
133.23 219.824 li
133.23 219.996 133.105 220.23 132.934 220.402 cv
132.699 220.637 132.449 220.746 132.137 220.746 cv
131.855 220.746 131.637 220.652 131.496 220.512 cv
131.387 220.371 131.34 220.121 131.34 219.777 cv
131.34 217.418 li
131.262 217.387 li
130.855 217.559 130.434 217.668 130.012 217.715 cv
130.012 217.934 li
130.309 217.934 li
130.637 217.934 130.668 217.996 130.668 218.527 cv
130.668 219.871 li
130.668 220.418 130.715 220.668 130.855 220.871 cv
131.027 221.105 131.34 221.23 131.793 221.23 cv
132.152 221.23 132.465 221.121 132.684 220.918 cv
133.23 220.418 li
133.23 220.652 133.215 220.777 133.184 221.168 cv
133.73 221.137 133.73 221.137 133.855 221.137 cv
133.965 221.137 133.965 221.137 134.512 221.168 cv
134.512 220.918 li
134.184 220.902 li
133.918 220.887 133.902 220.84 133.902 220.324 cv
cp
f
137.992 217.637 mo
137.539 217.449 137.32 217.387 137.039 217.387 cv
136.82 217.387 136.633 217.434 136.43 217.543 cv
135.727 217.902 li
135.273 218.152 134.977 218.73 134.977 219.402 cv
134.977 220.043 135.195 220.574 135.586 220.902 cv
135.852 221.121 136.227 221.23 136.758 221.23 cv
136.914 221.23 137.102 221.199 137.133 221.168 cv
138.023 220.418 li
137.977 221.168 li
138.383 221.152 138.508 221.137 138.602 221.137 cv
138.664 221.137 138.773 221.137 138.945 221.152 cv
138.992 221.152 139.164 221.152 139.32 221.168 cv
139.32 220.918 li
138.961 220.902 li
138.68 220.887 138.664 220.824 138.664 220.324 cv
138.664 215.387 li
138.586 215.324 li
138.242 215.465 137.977 215.527 137.336 215.621 cv
137.336 215.855 li
137.789 215.855 li
137.93 215.855 137.992 215.934 137.992 216.184 cv
cp
137.992 219.371 mo
137.992 219.887 137.977 219.965 137.867 220.152 cv
137.648 220.527 137.258 220.777 136.883 220.777 cv
136.18 220.777 135.664 220.09 135.664 219.152 cv
135.664 218.277 136.102 217.762 136.82 217.762 cv
137.133 217.762 137.445 217.871 137.727 218.059 cv
137.898 218.168 137.992 218.277 137.992 218.34 cv
cp
f
143.082 220.574 mo
142.973 220.496 li
142.457 220.793 142.285 220.871 141.941 220.871 cv
141.41 220.871 140.988 220.637 140.754 220.246 cv
140.613 219.98 140.551 219.762 140.535 219.293 cv
141.707 219.293 li
142.254 219.293 142.598 219.277 143.145 219.184 cv
143.16 219.074 143.16 218.996 143.16 218.902 cv
143.16 217.98 142.566 217.387 141.676 217.387 cv
141.379 217.387 141.035 217.496 140.707 217.684 cv
140.051 218.059 139.785 218.559 139.785 219.387 cv
139.785 219.887 139.91 220.324 140.129 220.621 cv
140.441 221.043 140.988 221.293 141.582 221.293 cv
141.879 221.293 142.176 221.23 142.504 221.09 cv
142.723 220.996 142.879 220.902 142.926 220.855 cv
cp
142.457 218.996 mo
142.035 219.012 141.848 219.027 141.551 219.027 cv
141.191 219.027 140.988 219.012 140.551 218.98 cv
140.551 218.605 140.582 218.418 140.691 218.215 cv
140.848 217.871 141.191 217.652 141.582 217.652 cv
141.848 217.652 142.051 217.746 142.191 217.965 cv
142.379 218.23 142.426 218.465 142.457 218.996 cv
cp
f
21.309 196.602 mo
21.309 11.75 li
16.809 196.602 mo
21.309 196.602 li
16.809 143.789 mo
21.309 143.789 li
16.809 90.973 mo
21.309 90.973 li
16.809 38.16 mo
21.309 38.16 li
@
5.617 196.883 mo
9.648 196.883 li
9.648 197.336 li
5.617 197.336 li
cp
f
10.59 194.758 mo
10.668 194.758 li
11.699 194.289 li
11.73 194.289 li
11.777 194.289 11.793 194.352 11.793 194.555 cv
11.793 198.43 li
11.793 198.836 11.699 198.93 11.277 198.961 cv
10.824 198.977 li
10.824 199.227 li
12.059 199.195 12.059 199.195 12.152 199.195 cv
12.246 199.195 12.434 199.195 12.699 199.211 cv
12.793 199.211 13.074 199.211 13.402 199.227 cv
13.402 198.977 li
12.98 198.961 li
12.543 198.93 12.465 198.836 12.465 198.43 cv
12.465 193.68 li
12.355 193.648 li
11.84 193.914 11.262 194.148 10.543 194.414 cv
cp
f
12.168 140.863 mo
10.918 140.863 10.293 141.848 10.293 143.785 cv
10.293 144.723 10.465 145.535 10.746 145.926 cv
11.012 146.316 11.465 146.535 11.965 146.535 cv
13.168 146.535 13.777 145.504 13.777 143.457 cv
13.777 141.691 13.262 140.863 12.168 140.863 cv
cp
12.012 141.145 mo
12.793 141.145 13.105 141.926 13.105 143.848 cv
13.105 145.551 12.809 146.254 12.074 146.254 cv
11.293 146.254 10.965 145.457 10.965 143.504 cv
10.965 141.816 11.262 141.145 12.012 141.145 cv
cp
f
10.59 89.129 mo
10.668 89.129 li
11.699 88.66 li
11.73 88.66 li
11.777 88.66 11.793 88.723 11.793 88.926 cv
11.793 92.801 li
11.793 93.207 11.699 93.301 11.277 93.332 cv
10.824 93.348 li
10.824 93.598 li
12.059 93.566 12.059 93.566 12.152 93.566 cv
12.246 93.566 12.434 93.566 12.699 93.582 cv
12.793 93.582 13.074 93.582 13.402 93.598 cv
13.402 93.348 li
12.98 93.332 li
12.543 93.301 12.465 93.207 12.465 92.801 cv
12.465 88.051 li
12.355 88.02 li
11.84 88.285 11.262 88.52 10.543 88.785 cv
cp
f
10.184 40.562 mo
10.184 40.781 li
11.684 40.75 11.684 40.75 11.965 40.75 cv
12.262 40.75 12.262 40.75 13.809 40.781 cv
13.793 40.609 13.793 40.531 13.793 40.406 cv
13.793 40.312 13.793 40.234 13.809 40.047 cv
12.887 40.094 12.512 40.109 11.027 40.141 cv
12.496 38.594 li
13.262 37.766 13.512 37.328 13.512 36.719 cv
13.512 35.812 12.887 35.234 11.871 35.234 cv
11.293 35.234 10.902 35.391 10.512 35.797 cv
10.371 36.891 li
10.605 36.891 li
10.699 36.516 li
10.84 36.047 11.121 35.859 11.652 35.859 cv
12.34 35.859 12.793 36.281 12.793 36.969 cv
12.793 37.562 12.449 38.156 11.543 39.125 cv
cp
f
39.1792 48.2771 mo
41.8546 49.6346 li
42.1008 49.7595 42.1992 50.0604 42.0742 50.3067 cv
41.9493 50.553 41.6483 50.6513 41.402 50.5263 cv
38.7267 49.1689 li
38.4805 49.0439 38.3821 48.743 38.5071 48.4968 cv
38.632 48.2505 38.933 48.1522 39.1792 48.2771 cv
44.5299 50.9921 mo
47.2052 52.3494 li
47.4515 52.4744 47.5498 52.7753 47.4248 53.0216 cv
47.2999 53.2679 46.999 53.3662 46.7527 53.2412 cv
44.0774 51.8838 li
43.8311 51.7589 43.7328 51.4579 43.8578 51.2117 cv
43.9827 50.9654 44.2836 50.8671 44.5299 50.9921 cv
49.8805 53.7069 mo
52.5559 55.0643 li
52.8021 55.1893 52.9004 55.4902 52.7755 55.7365 cv
52.6505 55.9828 52.3496 56.0811 52.1033 55.9561 cv
49.428 54.5987 li
49.1818 54.4738 49.0834 54.1728 49.2084 53.9266 cv
49.3333 53.6803 49.6343 53.582 49.8805 53.7069 cv
55.2312 56.4218 mo
56.7771 57.2062 li
57.8992 57.5036 li
58.1661 57.5743 58.3252 57.8481 58.2544 58.115 cv
58.1837 58.3819 57.9099 58.541 57.643 58.4702 cv
56.4699 58.1593 li
56.3718 58.1219 li
54.7787 57.3136 li
54.5324 57.1887 54.4341 56.8877 54.559 56.6414 cv
54.684 56.3952 54.9849 56.2969 55.2312 56.4218 cv
55.2312 56.4218 li
60.7991 58.2721 mo
63.699 59.0407 li
63.9659 59.1114 64.1249 59.3852 64.0542 59.6521 cv
63.9834 59.919 63.7097 60.0781 63.4427 60.0073 cv
60.5429 59.2388 li
60.276 59.168 60.1169 58.8943 60.1877 58.6273 cv
60.2584 58.3604 60.5321 58.2014 60.7991 58.2721 cv
66.5988 59.8092 mo
68.4871 60.3097 li
68.577 60.3431 li
69.5188 60.7994 li
69.7673 60.9199 69.8711 61.219 69.7507 61.4675 cv
69.6303 61.7159 69.3312 61.8198 69.0827 61.6994 cv
68.1844 61.264 li
66.3427 60.7759 li
66.0757 60.7051 65.9166 60.4314 65.9874 60.1644 cv
66.0581 59.8975 66.3319 59.7385 66.5988 59.8092 cv
72.2185 62.1078 mo
74.9182 63.4161 li
75.1667 63.5365 75.2705 63.8356 75.1501 64.0841 cv
75.0297 64.3326 74.7306 64.4364 74.4821 64.316 cv
71.7824 63.0077 li
71.5339 62.8873 71.4301 62.5882 71.5505 62.3397 cv
71.671 62.0912 71.97 61.9873 72.2185 62.1078 cv
77.6179 64.7244 mo
80.3176 66.0327 li
80.5661 66.1532 80.6699 66.4522 80.5495 66.7007 cv
80.429 66.9492 80.13 67.053 79.8815 66.9326 cv
77.1818 65.6243 li
76.9333 65.5039 76.8295 65.2048 76.9499 64.9563 cv
77.0703 64.7078 77.3694 64.604 77.6179 64.7244 cv
83.0173 67.341 mo
85.7169 68.6493 li
85.9655 68.7698 86.0693 69.0688 85.9488 69.3173 cv
85.8285 69.5658 85.5294 69.6696 85.2809 69.5492 cv
82.5812 68.2409 li
82.3327 68.1205 82.2288 67.8214 82.3493 67.5729 cv
82.4697 67.3244 82.7687 67.2206 83.0173 67.341 cv
88.4167 69.9576 mo
91.1164 71.2659 li
91.3649 71.3864 91.4687 71.6854 91.3483 71.9339 cv
91.2278 72.1824 90.9287 72.2862 90.6802 72.1658 cv
87.9805 70.8575 li
87.732 70.7371 87.6282 70.438 87.7486 70.1895 cv
87.8691 69.941 88.1682 69.8372 88.4167 69.9576 cv
93.7656 72.7746 mo
96.3132 74.3588 li
96.5476 74.5047 96.6195 74.813 96.4737 75.0475 cv
96.3278 75.282 96.0195 75.3538 95.785 75.2081 cv
93.2375 73.6237 li
93.003 73.4779 92.9311 73.1696 93.077 72.9351 cv
93.2228 72.7006 93.5311 72.6287 93.7656 72.7746 cv
98.8607 75.9432 mo
101.408 77.5275 li
101.643 77.6733 101.715 77.9817 101.569 78.2161 cv
101.423 78.4506 101.115 78.5225 100.88 78.3767 cv
98.3326 76.7923 li
98.0981 76.6465 98.0262 76.3382 98.172 76.1037 cv
98.3179 75.8692 98.6262 75.7973 98.8607 75.9432 cv
103.956 79.1118 mo
106.503 80.6961 li
106.738 80.8419 106.81 81.1503 106.664 81.3847 cv
106.518 81.6193 106.21 81.6912 105.975 81.5453 cv
103.428 79.961 li
103.193 79.8151 103.121 79.5068 103.267 79.2723 cv
103.413 79.0379 103.721 78.966 103.956 79.1118 cv
109.051 82.2804 mo
111.598 83.8648 li
111.833 84.0106 111.905 84.3189 111.759 84.5534 cv
111.613 84.7879 111.305 84.8598 111.07 84.7139 cv
108.523 83.1296 li
108.288 82.9838 108.216 82.6755 108.362 82.4409 cv
108.508 82.2065 108.816 82.1346 109.051 82.2804 cv
114.146 85.4491 mo
115.602 86.3546 li
116.691 86.5983 li
116.96 86.6586 117.13 86.9259 117.069 87.1954 cv
117.009 87.4649 116.742 87.6344 116.472 87.5741 cv
115.301 87.3119 li
115.146 87.2486 li
113.618 86.2982 li
113.383 86.1524 113.311 85.8441 113.457 85.6096 cv
113.603 85.3751 113.911 85.3032 114.146 85.4491 cv
119.618 87.2535 mo
122.546 87.9088 li
122.815 87.9691 122.985 88.2364 122.924 88.5059 cv
122.864 88.7754 122.597 88.9449 122.327 88.8846 cv
119.4 88.2294 li
119.13 88.1691 118.961 87.9017 119.021 87.6322 cv
119.081 87.3628 119.349 87.1932 119.618 87.2535 cv
125.473 88.564 mo
128.401 89.2193 li
128.67 89.2796 128.84 89.5469 128.78 89.8164 cv
128.719 90.0858 128.452 90.2554 128.182 90.1951 cv
125.255 89.5398 li
124.985 89.4795 124.816 89.2122 124.876 88.9427 cv
124.937 88.6733 125.204 88.5037 125.473 88.564 cv
131.328 89.8745 mo
134.256 90.5297 li
134.526 90.59 134.695 90.8574 134.635 91.1269 cv
134.574 91.3963 134.307 91.5659 134.038 91.5056 cv
131.11 90.8503 li
130.841 90.79 130.671 90.5227 130.731 90.2532 cv
130.792 89.9837 131.059 89.8142 131.328 89.8745 cv
137.184 91.185 mo
138.98 91.5871 li
140.001 91.5344 li
140.277 91.5202 140.512 91.7322 140.526 92.0079 cv
140.54 92.2837 140.328 92.5188 140.053 92.533 cv
138.964 92.5893 li
138.829 92.5779 li
136.965 92.1608 li
136.696 92.1005 136.526 91.8332 136.586 91.5637 cv
136.647 91.2942 136.914 91.1246 137.184 91.1849 cv
137.184 91.185 li
142.997 91.3796 mo
145.993 91.2248 li
146.269 91.2105 146.504 91.4225 146.518 91.6983 cv
146.532 91.974 146.32 92.2092 146.045 92.2234 cv
143.049 92.3782 li
142.773 92.3925 142.538 92.1805 142.523 91.9047 cv
142.509 91.629 142.721 91.3939 142.997 91.3796 cv
148.989 91.07 mo
151.985 90.9151 li
152.261 90.9009 152.496 91.1128 152.51 91.3887 cv
152.524 91.6644 152.312 91.8995 152.037 91.9138 cv
149.041 92.0686 li
148.765 92.0829 148.53 91.8708 148.516 91.5951 cv
148.501 91.3193 148.713 91.0842 148.989 91.07 cv
154.981 90.7603 mo
157.977 90.6055 li
158.253 90.5912 158.488 90.8032 158.502 91.079 cv
158.516 91.3548 158.304 91.5899 158.029 91.6041 cv
155.033 91.759 li
154.757 91.7732 154.522 91.5612 154.508 91.2855 cv
154.493 91.0096 154.705 90.7745 154.981 90.7603 cv
160.973 90.4506 mo
163.969 90.2958 li
164.245 90.2816 164.48 90.4935 164.494 90.7694 cv
164.508 91.0451 164.296 91.2802 164.021 91.2945 cv
161.025 91.4493 li
160.749 91.4636 160.514 91.2516 160.5 90.9758 cv
160.485 90.7 160.697 90.4649 160.973 90.4506 cv
166.965 90.141 mo
169.961 89.9862 li
170.237 89.9719 170.472 90.1839 170.486 90.4597 cv
170.5 90.7355 170.288 90.9706 170.013 90.9849 cv
167.017 91.1397 li
166.741 91.154 166.506 90.9419 166.492 90.6662 cv
166.477 90.3903 166.689 90.1552 166.965 90.141 cv
172.957 89.8313 mo
175.953 89.6765 li
176.229 89.6623 176.464 89.8743 176.478 90.1501 cv
176.492 90.4259 176.28 90.661 176.005 90.6752 cv
173.009 90.8301 li
172.733 90.8443 172.498 90.6323 172.484 90.3565 cv
172.469 90.0807 172.681 89.8456 172.957 89.8313 cv
178.949 89.5217 mo
181.945 89.3669 li
182.221 89.3526 182.456 89.5647 182.47 89.8404 cv
182.484 90.1162 182.272 90.3513 181.997 90.3656 cv
179.001 90.5204 li
178.725 90.5346 178.49 90.3226 178.476 90.0468 cv
178.461 89.7711 178.673 89.5359 178.949 89.5217 cv
184.941 89.212 mo
187.937 89.0572 li
188.213 89.043 188.448 89.255 188.462 89.5307 cv
188.476 89.8066 188.264 90.0417 187.989 90.0559 cv
184.993 90.2107 li
184.717 90.225 184.482 90.013 184.468 89.7372 cv
184.453 89.4614 184.665 89.2263 184.941 89.212 cv
190.933 88.9024 mo
193.929 88.7476 li
194.205 88.7333 194.44 88.9454 194.454 89.2211 cv
194.469 89.4969 194.256 89.732 193.981 89.7463 cv
190.985 89.9011 li
190.709 89.9153 190.474 89.7034 190.46 89.4275 cv
190.445 89.1518 190.657 88.9167 190.933 88.9024 cv
196.925 88.5928 mo
199.921 88.438 li
200.197 88.4237 200.432 88.6357 200.446 88.9115 cv
200.46 89.1873 200.248 89.4223 199.973 89.4366 cv
196.977 89.5914 li
196.701 89.6057 196.466 89.3937 196.452 89.1179 cv
196.437 88.8421 196.649 88.607 196.925 88.5928 cv
202.917 88.2832 mo
205.913 88.1283 li
206.189 88.1141 206.424 88.3261 206.438 88.6018 cv
206.452 88.8776 206.24 89.1127 205.965 89.127 cv
202.969 89.2818 li
202.693 89.296 202.458 89.084 202.444 88.8083 cv
202.429 88.5325 202.641 88.2974 202.917 88.2832 cv
208.909 87.9735 mo
211.905 87.8187 li
212.181 87.8044 212.416 88.0164 212.43 88.2922 cv
212.444 88.5679 212.232 88.8031 211.957 88.8173 cv
208.961 88.9722 li
208.685 88.9864 208.45 88.7744 208.436 88.4986 cv
208.421 88.2229 208.633 87.9878 208.909 87.9735 cv
214.901 87.6639 mo
217.897 87.509 li
218.173 87.4948 218.408 87.7068 218.422 87.9826 cv
218.436 88.2583 218.224 88.4934 217.949 88.5077 cv
214.953 88.6625 li
214.677 88.6768 214.442 88.4647 214.428 88.189 cv
214.413 87.9132 214.625 87.6781 214.901 87.6639 cv
220.893 87.3542 mo
223.889 87.1994 li
224.165 87.1851 224.4 87.3971 224.414 87.6729 cv
224.428 87.9487 224.217 88.1838 223.941 88.198 cv
220.945 88.3529 li
220.669 88.3671 220.434 88.1551 220.42 87.8794 cv
220.405 87.6035 220.617 87.3684 220.893 87.3542 cv
226.885 87.0445 mo
227.134 87.0317 li
227.41 87.0174 227.645 87.2295 227.659 87.5052 cv
227.674 87.781 227.462 88.0161 227.186 88.0303 cv
226.937 88.0432 li
226.661 88.0575 226.426 87.8455 226.412 87.5697 cv
226.397 87.2939 226.609 87.0588 226.885 87.0445 cv
3.0518e-5 .993988 1 3.0518e-5 cmyk
f
39.453 43.441 mo
39.453 55.059 li
39.453 55.3352 39.2291 55.559 38.953 55.559 cv
38.6768 55.559 38.453 55.3352 38.453 55.059 cv
38.453 43.441 li
38.453 43.1648 38.6768 42.941 38.953 42.941 cv
39.2291 42.941 39.453 43.1648 39.453 43.441 cv
36.953 42.941 mo
40.953 42.941 li
41.2291 42.941 41.453 43.1648 41.453 43.441 cv
41.453 43.7172 41.2291 43.941 40.953 43.941 cv
36.953 43.941 li
36.6769 43.941 36.453 43.7172 36.453 43.441 cv
36.453 43.1648 36.6769 42.941 36.953 42.941 cv
36.953 54.559 mo
40.953 54.559 li
41.2291 54.559 41.453 54.7829 41.453 55.059 cv
41.453 55.3352 41.2291 55.559 40.953 55.559 cv
36.953 55.559 li
36.6769 55.559 36.453 55.3352 36.453 55.059 cv
36.453 54.7829 36.6769 54.559 36.953 54.559 cv
f
57.098 53.449 mo
57.098 62.43 li
57.098 62.7061 56.8742 62.93 56.598 62.93 cv
56.3218 62.93 56.098 62.7061 56.098 62.43 cv
56.098 53.449 li
56.098 53.1729 56.3218 52.949 56.598 52.949 cv
56.8742 52.949 57.098 53.1729 57.098 53.449 cv
54.598 52.949 mo
58.598 52.949 li
58.8742 52.949 59.098 53.1729 59.098 53.449 cv
59.098 53.7251 58.8742 53.949 58.598 53.949 cv
54.598 53.949 li
54.3218 53.949 54.098 53.7251 54.098 53.449 cv
54.098 53.1729 54.3218 52.949 54.598 52.949 cv
54.598 61.93 mo
58.598 61.93 li
58.8742 61.93 59.098 62.1539 59.098 62.43 cv
59.098 62.7061 58.8742 62.93 58.598 62.93 cv
54.598 62.93 li
54.3218 62.93 54.098 62.7061 54.098 62.43 cv
54.098 62.1539 54.3218 61.93 54.598 61.93 cv
f
68.859 59.207 mo
68.859 62.902 li
68.859 63.1781 68.6351 63.402 68.359 63.402 cv
68.0828 63.402 67.859 63.1781 67.859 62.902 cv
67.859 59.207 li
67.859 58.9309 68.0828 58.707 68.359 58.707 cv
68.6351 58.707 68.859 58.9309 68.859 59.207 cv
66.359 58.707 mo
70.359 58.707 li
70.6351 58.707 70.859 58.9309 70.859 59.207 cv
70.859 59.4832 70.6351 59.707 70.359 59.707 cv
66.359 59.707 li
66.0829 59.707 65.859 59.4832 65.859 59.207 cv
65.859 58.9309 66.0829 58.707 66.359 58.707 cv
66.359 62.402 mo
70.359 62.402 li
70.6351 62.402 70.859 62.6259 70.859 62.902 cv
70.859 63.1781 70.6351 63.402 70.359 63.402 cv
66.359 63.402 li
66.0829 63.402 65.859 63.1781 65.859 62.902 cv
65.859 62.6259 66.0829 62.402 66.359 62.402 cv
f
92.387 70.613 mo
92.387 73.781 li
92.387 74.0572 92.1631 74.281 91.887 74.281 cv
91.6108 74.281 91.387 74.0572 91.387 73.781 cv
91.387 70.613 li
91.387 70.3369 91.6108 70.113 91.887 70.113 cv
92.1631 70.113 92.387 70.3369 92.387 70.613 cv
89.887 70.113 mo
93.887 70.113 li
94.1632 70.113 94.387 70.3369 94.387 70.613 cv
94.387 70.8892 94.1632 71.113 93.887 71.113 cv
89.887 71.113 li
89.6108 71.113 89.387 70.8892 89.387 70.613 cv
89.387 70.3369 89.6108 70.113 89.887 70.113 cv
89.887 73.281 mo
93.887 73.281 li
94.1632 73.281 94.387 73.5049 94.387 73.781 cv
94.387 74.0572 94.1632 74.281 93.887 74.281 cv
89.887 74.281 li
89.6108 74.281 89.387 74.0572 89.387 73.781 cv
89.387 73.5049 89.6108 73.281 89.887 73.281 cv
f
115.91 85.766 mo
115.91 87.879 li
115.91 88.1551 115.686 88.379 115.41 88.379 cv
115.134 88.379 114.91 88.1551 114.91 87.879 cv
114.91 85.766 li
114.91 85.4898 115.134 85.266 115.41 85.266 cv
115.686 85.266 115.91 85.4898 115.91 85.766 cv
113.41 85.266 mo
117.41 85.266 li
117.686 85.266 117.91 85.4898 117.91 85.766 cv
117.91 86.0422 117.686 86.266 117.41 86.266 cv
113.41 86.266 li
113.134 86.266 112.91 86.0422 112.91 85.766 cv
112.91 85.4898 113.134 85.266 113.41 85.266 cv
113.41 87.379 mo
117.41 87.379 li
117.686 87.379 117.91 87.6028 117.91 87.879 cv
117.91 88.1551 117.686 88.379 117.41 88.379 cv
113.41 88.379 li
113.134 88.379 112.91 88.1551 112.91 87.879 cv
112.91 87.6028 113.134 87.379 113.41 87.379 cv
f
139.438 89.977 mo
139.438 94.203 li
139.438 94.4791 139.214 94.703 138.938 94.703 cv
138.662 94.703 138.438 94.4791 138.438 94.203 cv
138.438 89.977 li
138.438 89.7009 138.662 89.477 138.938 89.477 cv
139.214 89.477 139.438 89.7009 139.438 89.977 cv
136.938 89.477 mo
140.938 89.477 li
141.214 89.477 141.438 89.7009 141.438 89.977 cv
141.438 90.2531 141.214 90.477 140.938 90.477 cv
136.938 90.477 li
136.662 90.477 136.438 90.2531 136.438 89.977 cv
136.438 89.7009 136.662 89.477 136.938 89.477 cv
136.938 93.703 mo
140.938 93.703 li
141.214 93.703 141.438 93.9268 141.438 94.203 cv
141.438 94.4791 141.214 94.703 140.938 94.703 cv
136.938 94.703 li
136.662 94.703 136.438 94.4791 136.438 94.203 cv
136.438 93.9268 136.662 93.703 136.938 93.703 cv
f
227.66 87.004 mo
227.66 88.059 li
227.66 88.3352 227.436 88.559 227.16 88.559 cv
226.884 88.559 226.66 88.3352 226.66 88.059 cv
226.66 87.004 li
226.66 86.7279 226.884 86.504 227.16 86.504 cv
227.436 86.504 227.66 86.7279 227.66 87.004 cv
225.16 86.504 mo
229.16 86.504 li
229.436 86.504 229.66 86.7279 229.66 87.004 cv
229.66 87.2802 229.436 87.504 229.16 87.504 cv
225.16 87.504 li
224.884 87.504 224.66 87.2802 224.66 87.004 cv
224.66 86.7279 224.884 86.504 225.16 86.504 cv
225.16 87.559 mo
229.16 87.559 li
229.436 87.559 229.66 87.7829 229.66 88.059 cv
229.66 88.3352 229.436 88.559 229.16 88.559 cv
225.16 88.559 li
224.884 88.559 224.66 88.3352 224.66 88.059 cv
224.66 87.7829 224.884 87.559 225.16 87.559 cv
f
39.1084 163.486 mo
56.637 169.217 li
68.241 167.294 li
91.6934 159.752 li
115.179 147.487 li
115.341 147.435 li
138.869 144.146 li
138.895 144.143 li
227.117 136.607 li
227.393 136.583 227.635 136.787 227.658 137.062 cv
227.682 137.338 227.478 137.58 227.203 137.603 cv
138.994 145.138 li
115.565 148.413 li
92.1185 160.658 li
92.04 160.691 li
68.5121 168.257 li
68.4407 168.274 li
56.6797 170.223 li
56.4426 170.205 li
38.7976 164.436 li
38.5352 164.35 38.3919 164.068 38.4777 163.806 cv
38.5636 163.543 38.8459 163.4 39.1084 163.486 cv
f
39.453 146.004 mo
39.453 184.031 li
39.453 184.307 39.2291 184.531 38.953 184.531 cv
38.6768 184.531 38.453 184.307 38.453 184.031 cv
38.453 146.004 li
38.453 145.728 38.6768 145.504 38.953 145.504 cv
39.2291 145.504 39.453 145.728 39.453 146.004 cv
36.953 145.504 mo
40.953 145.504 li
41.2291 145.504 41.453 145.728 41.453 146.004 cv
41.453 146.28 41.2291 146.504 40.953 146.504 cv
36.953 146.504 li
36.6769 146.504 36.453 146.28 36.453 146.004 cv
36.453 145.728 36.6769 145.504 36.953 145.504 cv
36.953 183.531 mo
40.953 183.531 li
41.2291 183.531 41.453 183.755 41.453 184.031 cv
41.453 184.307 41.2291 184.531 40.953 184.531 cv
36.953 184.531 li
36.6769 184.531 36.453 184.307 36.453 184.031 cv
36.453 183.755 36.6769 183.531 36.953 183.531 cv
f
57.098 163.922 mo
57.098 176.07 li
57.098 176.346 56.8742 176.57 56.598 176.57 cv
56.3218 176.57 56.098 176.346 56.098 176.07 cv
56.098 163.922 li
56.098 163.646 56.3218 163.422 56.598 163.422 cv
56.8742 163.422 57.098 163.646 57.098 163.922 cv
54.598 163.422 mo
58.598 163.422 li
58.8742 163.422 59.098 163.646 59.098 163.922 cv
59.098 164.198 58.8742 164.422 58.598 164.422 cv
54.598 164.422 li
54.3218 164.422 54.098 164.198 54.098 163.922 cv
54.098 163.646 54.3218 163.422 54.598 163.422 cv
54.598 175.57 mo
58.598 175.57 li
58.8742 175.57 59.098 175.794 59.098 176.07 cv
59.098 176.346 58.8742 176.57 58.598 176.57 cv
54.598 176.57 li
54.3218 176.57 54.098 176.346 54.098 176.07 cv
54.098 175.794 54.3218 175.57 54.598 175.57 cv
f
68.859 166.195 mo
68.859 169.363 li
68.859 169.639 68.6351 169.863 68.359 169.863 cv
68.0828 169.863 67.859 169.639 67.859 169.363 cv
67.859 166.195 li
67.859 165.919 68.0828 165.695 68.359 165.695 cv
68.6351 165.695 68.859 165.919 68.859 166.195 cv
66.359 165.695 mo
70.359 165.695 li
70.6351 165.695 70.859 165.919 70.859 166.195 cv
70.859 166.471 70.6351 166.695 70.359 166.695 cv
66.359 166.695 li
66.0829 166.695 65.859 166.471 65.859 166.195 cv
65.859 165.919 66.0829 165.695 66.359 165.695 cv
66.359 168.863 mo
70.359 168.863 li
70.6351 168.863 70.859 169.087 70.859 169.363 cv
70.859 169.639 70.6351 169.863 70.359 169.863 cv
66.359 169.863 li
66.0829 169.863 65.859 169.639 65.859 169.363 cv
65.859 169.087 66.0829 168.863 66.359 168.863 cv
f
92.387 157.574 mo
92.387 161.801 li
92.387 162.077 92.1631 162.301 91.887 162.301 cv
91.6108 162.301 91.387 162.077 91.387 161.801 cv
91.387 157.574 li
91.387 157.298 91.6108 157.074 91.887 157.074 cv
92.1631 157.074 92.387 157.298 92.387 157.574 cv
89.887 157.074 mo
93.887 157.074 li
94.1632 157.074 94.387 157.298 94.387 157.574 cv
94.387 157.85 94.1632 158.074 93.887 158.074 cv
89.887 158.074 li
89.6108 158.074 89.387 157.85 89.387 157.574 cv
89.387 157.298 89.6108 157.074 89.887 157.074 cv
89.887 161.301 mo
93.887 161.301 li
94.1632 161.301 94.387 161.525 94.387 161.801 cv
94.387 162.077 94.1632 162.301 93.887 162.301 cv
89.887 162.301 li
89.6108 162.301 89.387 162.077 89.387 161.801 cv
89.387 161.525 89.6108 161.301 89.887 161.301 cv
f
115.91 142.648 mo
115.91 151.629 li
115.91 151.905 115.686 152.129 115.41 152.129 cv
115.134 152.129 114.91 151.905 114.91 151.629 cv
114.91 142.648 li
114.91 142.372 115.134 142.148 115.41 142.148 cv
115.686 142.148 115.91 142.372 115.91 142.648 cv
113.41 142.148 mo
117.41 142.148 li
117.686 142.148 117.91 142.372 117.91 142.648 cv
117.91 142.924 117.686 143.148 117.41 143.148 cv
113.41 143.148 li
113.134 143.148 112.91 142.924 112.91 142.648 cv
112.91 142.372 113.134 142.148 113.41 142.148 cv
113.41 151.129 mo
117.41 151.129 li
117.686 151.129 117.91 151.353 117.91 151.629 cv
117.91 151.905 117.686 152.129 117.41 152.129 cv
113.41 152.129 li
113.134 152.129 112.91 151.905 112.91 151.629 cv
112.91 151.353 113.134 151.129 113.41 151.129 cv
f
139.438 131.438 mo
139.438 155.203 li
139.438 155.479 139.214 155.703 138.938 155.703 cv
138.662 155.703 138.438 155.479 138.438 155.203 cv
138.438 131.438 li
138.438 131.162 138.662 130.938 138.938 130.938 cv
139.214 130.938 139.438 131.162 139.438 131.438 cv
136.938 130.938 mo
140.938 130.938 li
141.214 130.938 141.438 131.162 141.438 131.438 cv
141.438 131.714 141.214 131.938 140.938 131.938 cv
136.938 131.938 li
136.662 131.938 136.438 131.714 136.438 131.438 cv
136.438 131.162 136.662 130.938 136.938 130.938 cv
136.938 154.703 mo
140.938 154.703 li
141.214 154.703 141.438 154.927 141.438 155.203 cv
141.438 155.479 141.214 155.703 140.938 155.703 cv
136.938 155.703 li
136.662 155.703 136.438 155.479 136.438 155.203 cv
136.438 154.927 136.662 154.703 136.938 154.703 cv
f
227.66 129.18 mo
227.66 141.328 li
227.66 141.604 227.436 141.828 227.16 141.828 cv
226.884 141.828 226.66 141.604 226.66 141.328 cv
226.66 129.18 li
226.66 128.904 226.884 128.68 227.16 128.68 cv
227.436 128.68 227.66 128.904 227.66 129.18 cv
225.16 128.68 mo
229.16 128.68 li
229.436 128.68 229.66 128.904 229.66 129.18 cv
229.66 129.456 229.436 129.68 229.16 129.68 cv
225.16 129.68 li
224.884 129.68 224.66 129.456 224.66 129.18 cv
224.66 128.904 224.884 128.68 225.16 128.68 cv
225.16 140.828 mo
229.16 140.828 li
229.436 140.828 229.66 141.052 229.66 141.328 cv
229.66 141.604 229.436 141.828 229.16 141.828 cv
225.16 141.828 li
224.884 141.828 224.66 141.604 224.66 141.328 cv
224.66 141.052 224.884 140.828 225.16 140.828 cv
f
39.1628 57.7181 mo
41.8859 58.9769 li
42.1366 59.0927 42.2459 59.3899 42.13 59.6405 cv
42.0142 59.8912 41.717 60.0005 41.4664 59.8846 cv
38.7432 58.6259 li
38.4925 58.51 38.3833 58.2129 38.4991 57.9622 cv
38.615 57.7115 38.9121 57.6023 39.1628 57.7181 cv
44.6091 60.2356 mo
47.3323 61.4943 li
47.583 61.6102 47.6922 61.9073 47.5764 62.158 cv
47.4605 62.4086 47.1633 62.5179 46.9127 62.402 cv
44.1895 61.1433 li
43.9389 61.0275 43.8296 60.7304 43.9455 60.4797 cv
44.0613 60.229 44.3584 60.1198 44.6091 60.2356 cv
50.0554 62.753 mo
52.7786 64.0117 li
53.0293 64.1276 53.1385 64.4248 53.0227 64.6754 cv
52.9068 64.9261 52.6097 65.0353 52.359 64.9195 cv
49.6358 63.6607 li
49.3852 63.5449 49.276 63.2478 49.3918 62.9971 cv
49.5077 62.7465 49.8048 62.6372 50.0554 62.753 cv
55.5017 65.2704 mo
56.7421 65.8438 li
58.2152 66.0596 li
58.4884 66.0996 58.6775 66.3535 58.6374 66.6268 cv
58.5974 66.9 58.3435 67.0891 58.0703 67.049 cv
56.5255 66.8227 li
56.3882 66.7819 li
55.0822 66.1782 li
54.8315 66.0624 54.7222 65.7652 54.8381 65.5146 cv
54.9539 65.2639 55.2511 65.1546 55.5017 65.2704 cv
61.1835 66.4945 mo
64.1518 66.9293 li
64.4251 66.9693 64.6141 67.2233 64.5741 67.4965 cv
64.534 67.7697 64.2801 67.9588 64.0069 67.9187 cv
61.0386 67.4839 li
60.7653 67.4439 60.5763 67.1899 60.6163 66.9167 cv
60.6563 66.6434 60.9103 66.4545 61.1835 66.4945 cv
67.1201 67.3642 mo
68.4315 67.5563 li
68.5024 67.572 li
70.1067 68.0522 li
70.3713 68.1314 70.5215 68.4101 70.4423 68.6746 cv
70.3631 68.9392 70.0845 69.0894 69.82 69.0102 cv
68.2505 68.5404 li
66.9752 68.3536 li
66.702 68.3136 66.5129 68.0597 66.5529 67.7864 cv
66.593 67.5132 66.8469 67.3242 67.1202 67.3642 cv
67.1201 67.3642 li
72.9807 68.9126 mo
75.8547 69.7729 li
76.1192 69.8521 76.2695 70.1307 76.1903 70.3953 cv
76.1111 70.6598 75.8325 70.8101 75.5679 70.7309 cv
72.6939 69.8706 li
72.4294 69.7914 72.2791 69.5128 72.3583 69.2482 cv
72.4375 68.9837 72.7162 68.8334 72.9807 68.9126 cv
78.7287 70.6332 mo
81.6027 71.4936 li
81.8672 71.5727 82.0175 71.8514 81.9383 72.1159 cv
81.8591 72.3805 81.5805 72.5307 81.3159 72.4515 cv
78.4419 71.5912 li
78.1774 71.512 78.0271 71.2334 78.1063 70.9688 cv
78.1855 70.7043 78.4641 70.554 78.7287 70.6332 cv
84.4767 72.3538 mo
87.3507 73.2141 li
87.6152 73.2933 87.7655 73.572 87.6863 73.8365 cv
87.6071 74.1011 87.3284 74.2513 87.0639 74.1721 cv
84.1899 73.3118 li
83.9253 73.2326 83.7751 72.954 83.8543 72.6895 cv
83.9335 72.4249 84.2122 72.2746 84.4767 72.3538 cv
90.2247 74.0745 mo
92.0304 74.615 li
92.1596 74.6749 li
93.0944 75.283 li
93.3259 75.4336 93.3914 75.7434 93.2408 75.9748 cv
93.0902 76.2063 92.7805 76.2718 92.549 76.1212 cv
91.6747 75.5524 li
89.9379 75.0325 li
89.6734 74.9533 89.5231 74.6747 89.6023 74.4101 cv
89.6815 74.1456 89.9602 73.9953 90.2247 74.0745 cv
95.609 76.919 mo
98.1237 78.5551 li
98.3552 78.7056 98.4207 79.0154 98.2701 79.2468 cv
98.1195 79.4783 97.8098 79.5438 97.5783 79.3933 cv
95.0637 77.7572 li
94.8322 77.6067 94.7667 77.297 94.9172 77.0655 cv
95.0678 76.834 95.3776 76.7684 95.609 76.919 cv
100.638 80.1911 mo
103.153 81.8271 li
103.384 81.9777 103.45 82.2874 103.299 82.5189 cv
103.149 82.7504 102.839 82.8159 102.608 82.6654 cv
100.093 81.0293 li
99.8615 80.8788 99.796 80.569 99.9465 80.3376 cv
100.097 80.106 100.407 80.0405 100.638 80.1911 cv
105.668 83.4632 mo
108.182 85.0992 li
108.414 85.2498 108.479 85.5594 108.329 85.7909 cv
108.178 86.0224 107.868 86.088 107.637 85.9374 cv
105.122 84.3014 li
104.891 84.1508 104.825 83.841 104.976 83.6096 cv
105.126 83.3781 105.436 83.3126 105.668 83.4632 cv
110.697 86.7352 mo
113.212 88.3712 li
113.443 88.5218 113.509 88.8315 113.358 89.063 cv
113.207 89.2944 112.898 89.36 112.666 89.2094 cv
110.152 87.5734 li
109.92 87.4228 109.855 87.1131 110.005 86.8816 cv
110.156 86.6501 110.465 86.5846 110.697 86.7352 cv
115.527 89.909 mo
118.501 90.2997 li
118.775 90.3357 118.968 90.5867 118.932 90.8605 cv
118.896 91.1343 118.645 91.3271 118.371 91.2912 cv
115.396 90.9005 li
115.123 90.8646 114.93 90.6135 114.966 90.3397 cv
115.002 90.0659 115.253 89.8731 115.527 89.909 cv
121.476 90.6903 mo
124.45 91.081 li
124.724 91.117 124.917 91.368 124.881 91.6418 cv
124.845 91.9156 124.594 92.1084 124.32 92.0724 cv
121.345 91.6818 li
121.072 91.6459 120.879 91.3948 120.915 91.121 cv
120.951 90.8471 121.202 90.6544 121.476 90.6903 cv
127.424 91.4716 mo
130.399 91.8623 li
130.673 91.8982 130.865 92.1493 130.83 92.4231 cv
130.794 92.6969 130.542 92.8897 130.269 92.8537 cv
127.294 92.4631 li
127.02 92.4271 126.828 92.176 126.864 91.9023 cv
126.9 91.6284 127.151 91.4357 127.424 91.4716 cv
133.373 92.2529 mo
136.348 92.6435 li
136.622 92.6795 136.814 92.9306 136.778 93.2044 cv
136.742 93.4782 136.491 93.671 136.218 93.635 cv
133.243 93.2444 li
132.969 93.2084 132.776 92.9573 132.812 92.6836 cv
132.848 92.4097 133.1 92.2169 133.373 92.2529 cv
.883665 .769161 3.0518e-5 3.0518e-5 cmyk
f
39.453 42.328 mo
39.453 74.016 li
39.453 74.2922 39.2291 74.516 38.953 74.516 cv
38.6768 74.516 38.453 74.2922 38.453 74.016 cv
38.453 42.328 li
38.453 42.0519 38.6768 41.828 38.953 41.828 cv
39.2291 41.828 39.453 42.0519 39.453 42.328 cv
36.953 41.828 mo
40.953 41.828 li
41.2291 41.828 41.453 42.0519 41.453 42.328 cv
41.453 42.6042 41.2291 42.828 40.953 42.828 cv
36.953 42.828 li
36.6769 42.828 36.453 42.6042 36.453 42.328 cv
36.453 42.0519 36.6769 41.828 36.953 41.828 cv
36.953 73.516 mo
40.953 73.516 li
41.2291 73.516 41.453 73.7398 41.453 74.016 cv
41.453 74.2922 41.2291 74.516 40.953 74.516 cv
36.953 74.516 li
36.6769 74.516 36.453 74.2922 36.453 74.016 cv
36.453 73.7398 36.6769 73.516 36.953 73.516 cv
f
57.098 63.16 mo
57.098 69.496 li
57.098 69.7721 56.8742 69.996 56.598 69.996 cv
56.3218 69.996 56.098 69.7721 56.098 69.496 cv
56.098 63.16 li
56.098 62.8839 56.3218 62.66 56.598 62.66 cv
56.8742 62.66 57.098 62.8839 57.098 63.16 cv
54.598 62.66 mo
58.598 62.66 li
58.8742 62.66 59.098 62.8839 59.098 63.16 cv
59.098 63.4362 58.8742 63.66 58.598 63.66 cv
54.598 63.66 li
54.3218 63.66 54.098 63.4362 54.098 63.16 cv
54.098 62.8839 54.3218 62.66 54.598 62.66 cv
54.598 68.996 mo
58.598 68.996 li
58.8742 68.996 59.098 69.2199 59.098 69.496 cv
59.098 69.7721 58.8742 69.996 58.598 69.996 cv
54.598 69.996 li
54.3218 69.996 54.098 69.7721 54.098 69.496 cv
54.098 69.2199 54.3218 68.996 54.598 68.996 cv
f
68.859 66.996 mo
68.859 69.109 li
68.859 69.3852 68.6351 69.609 68.359 69.609 cv
68.0828 69.609 67.859 69.3852 67.859 69.109 cv
67.859 66.996 li
67.859 66.7198 68.0828 66.496 68.359 66.496 cv
68.6351 66.496 68.859 66.7198 68.859 66.996 cv
66.359 66.496 mo
70.359 66.496 li
70.6351 66.496 70.859 66.7198 70.859 66.996 cv
70.859 67.2722 70.6351 67.496 70.359 67.496 cv
66.359 67.496 li
66.0829 67.496 65.859 67.2722 65.859 66.996 cv
65.859 66.7198 66.0829 66.496 66.359 66.496 cv
66.359 68.609 mo
70.359 68.609 li
70.6351 68.609 70.859 68.8328 70.859 69.109 cv
70.859 69.3852 70.6351 69.609 70.359 69.609 cv
66.359 69.609 li
66.0829 69.609 65.859 69.3852 65.859 69.109 cv
65.859 68.8328 66.0829 68.609 66.359 68.609 cv
f
139.438 90.848 mo
139.438 96.129 li
139.438 96.4052 139.214 96.629 138.938 96.629 cv
138.662 96.629 138.438 96.4052 138.438 96.129 cv
138.438 90.848 li
138.438 90.5718 138.662 90.348 138.938 90.348 cv
139.214 90.348 139.438 90.5718 139.438 90.848 cv
136.938 90.348 mo
140.938 90.348 li
141.214 90.348 141.438 90.5718 141.438 90.848 cv
141.438 91.1242 141.214 91.348 140.938 91.348 cv
136.938 91.348 li
136.662 91.348 136.438 91.1242 136.438 90.848 cv
136.438 90.5718 136.662 90.348 136.938 90.348 cv
136.938 95.629 mo
140.938 95.629 li
141.214 95.629 141.438 95.8528 141.438 96.129 cv
141.438 96.4052 141.214 96.629 140.938 96.629 cv
136.938 96.629 li
136.662 96.629 136.438 96.4052 136.438 96.129 cv
136.438 95.8528 136.662 95.629 136.938 95.629 cv
f
39.0305 156.842 mo
56.6754 159.608 li
56.892 159.698 li
68.4083 168.07 li
91.6653 156.564 li
91.7123 156.543 li
115.235 147.773 li
115.339 147.747 li
138.867 144.372 li
139.14 144.333 139.394 144.523 139.433 144.796 cv
139.472 145.069 139.282 145.323 139.009 145.362 cv
115.534 148.729 li
92.0856 157.472 li
68.5807 169.1 li
68.4135 169.183 68.216 169.166 68.065 169.056 cv
56.4015 160.577 li
38.8756 157.83 li
38.6028 157.787 38.4163 157.531 38.459 157.259 cv
38.5018 156.986 38.7576 156.799 39.0305 156.842 cv
f
39.453 136.211 mo
39.453 178.461 li
39.453 178.737 39.2291 178.961 38.953 178.961 cv
38.6768 178.961 38.453 178.737 38.453 178.461 cv
38.453 136.211 li
38.453 135.935 38.6768 135.711 38.953 135.711 cv
39.2291 135.711 39.453 135.935 39.453 136.211 cv
36.953 135.711 mo
40.953 135.711 li
41.2291 135.711 41.453 135.935 41.453 136.211 cv
41.453 136.487 41.2291 136.711 40.953 136.711 cv
36.953 136.711 li
36.6769 136.711 36.453 136.487 36.453 136.211 cv
36.453 135.935 36.6769 135.711 36.953 135.711 cv
36.953 177.961 mo
40.953 177.961 li
41.2291 177.961 41.453 178.185 41.453 178.461 cv
41.453 178.737 41.2291 178.961 40.953 178.961 cv
36.953 178.961 li
36.6769 178.961 36.453 178.737 36.453 178.461 cv
36.453 178.185 36.6769 177.961 36.953 177.961 cv
f
57.098 157.461 mo
57.098 163.797 li
57.098 164.073 56.8742 164.297 56.598 164.297 cv
56.3218 164.297 56.098 164.073 56.098 163.797 cv
56.098 157.461 li
56.098 157.185 56.3218 156.961 56.598 156.961 cv
56.8742 156.961 57.098 157.185 57.098 157.461 cv
54.598 156.961 mo
58.598 156.961 li
58.8742 156.961 59.098 157.185 59.098 157.461 cv
59.098 157.737 58.8742 157.961 58.598 157.961 cv
54.598 157.961 li
54.3218 157.961 54.098 157.737 54.098 157.461 cv
54.098 157.185 54.3218 156.961 54.598 156.961 cv
54.598 163.297 mo
58.598 163.297 li
58.8742 163.297 59.098 163.521 59.098 163.797 cv
59.098 164.073 58.8742 164.297 58.598 164.297 cv
54.598 164.297 li
54.3218 164.297 54.098 164.073 54.098 163.797 cv
54.098 163.521 54.3218 163.297 54.598 163.297 cv
f
139.438 139.586 mo
139.438 150.148 li
139.438 150.424 139.214 150.648 138.938 150.648 cv
138.662 150.648 138.438 150.424 138.438 150.148 cv
138.438 139.586 li
138.438 139.31 138.662 139.086 138.938 139.086 cv
139.214 139.086 139.438 139.31 139.438 139.586 cv
136.938 139.086 mo
140.938 139.086 li
141.214 139.086 141.438 139.31 141.438 139.586 cv
141.438 139.862 141.214 140.086 140.938 140.086 cv
136.938 140.086 li
136.662 140.086 136.438 139.862 136.438 139.586 cv
136.438 139.31 136.662 139.086 136.938 139.086 cv
136.938 149.648 mo
140.938 149.648 li
141.214 149.648 141.438 149.872 141.438 150.148 cv
141.438 150.424 141.214 150.648 140.938 150.648 cv
136.938 150.648 li
136.662 150.648 136.438 150.424 136.438 150.148 cv
136.438 149.872 136.662 149.648 136.938 149.648 cv
f
41.1529 50.9218 mo
39.453 50.9218 li
39.453 49.5374 li
41.1529 50.3999 li
41.1529 50.9218 li
41.1529 49.2785 mo
39.453 48.416 li
39.453 46.9217 li
41.1529 46.9217 li
41.1529 49.2785 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 6 38.1529 173.078 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 6 
/M[4 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~\=X$4\=X$4rV^YQrUEHNCe"I*Ce"I*~>
<~\Y'36\Y'36s8R%Ws78iTD+FX,D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 50.3999 mo
39.453 49.5374 li
39.453 48.416 li
41.1529 49.2785 li
41.1529 50.3999 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 4 38.1529 174.078 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
38.453 50.9218 mo
37.1529 50.9218 li
37.1529 46.9217 li
38.453 46.9217 li
38.453 48.711 li
38.4528 48.7188 38.4528 48.7265 38.453 48.7342 cv
38.453 50.9218 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 36.1529 173.078 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~6US@N6b'_=rM$%b#RG5P#]'~>
<~6q"RR7(KqAs.c@h#RG8Q#]0~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
38.453 48.7342 mo
38.4528 48.7265 38.4528 48.7188 38.453 48.711 cv
38.453 48.7342 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 37.1529 174.078 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
39.453 50.9218 mo
38.453 50.9218 li
38.453 46.9217 li
39.453 46.9217 li
39.453 48.416 li
39.453 49.5374 li
39.453 50.9218 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 37.1529 173.078 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V*7kT5#aWE!)W_(g4>sOJY<~>
<~e*ZAJmHF!:rTO4V`n](`gsc~>
<~7(JsY\Y-S7s.fVc#]3*<D+F~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
58.7972 59.8749 mo
57.098 59.8749 li
57.098 58.3258 li
57.643 58.4702 li
57.6859 58.4816 57.729 58.487 57.7714 58.487 cv
57.9927 58.487 58.195 58.339 58.2544 58.115 cv
58.3252 57.8481 58.1661 57.5743 57.8992 57.5036 cv
57.098 57.2912 li
57.098 55.8749 li
58.7972 55.8749 li
58.7972 59.8749 li
56.098 59.8749 mo
54.7972 59.8749 li
54.7972 57.323 li
56.098 57.983 li
56.098 59.8749 li
56.098 56.8616 mo
55.2312 56.4218 li
55.2312 56.4218 li
55.1587 56.385 55.0814 56.3676 55.0053 56.3676 cv
54.9332 56.3676 54.8622 56.3832 54.7972 56.4129 cv
54.7972 55.8749 li
56.098 55.8749 li
56.098 56.8616 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 53.7972 164.125 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#REdb\=X$4]"7k=Df;AErUEHN#RG6:!!!91Ce"I*~>
<~6q"SY#REgd\Y'36]=\+CE,_SIs78iT#RG9<!!!91D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
57.7714 58.487 mo
57.729 58.487 57.6859 58.4816 57.643 58.4702 cv
57.098 58.3258 li
57.098 57.2912 li
57.8992 57.5036 li
58.1661 57.5743 58.3252 57.8481 58.2544 58.115 cv
58.195 58.339 57.9927 58.487 57.7714 58.487 cv
56.098 57.983 mo
54.7972 57.323 li
54.7972 56.4129 li
54.8622 56.3832 54.9332 56.3676 55.0053 56.3676 cv
55.0814 56.3676 55.1587 56.385 55.2312 56.4218 cv
55.2312 56.4218 li
56.098 56.8616 li
56.098 57.983 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 53.7972 165.125 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
57.098 59.8749 mo
56.098 59.8749 li
56.098 57.983 li
56.098 56.8616 li
56.098 55.8749 li
57.098 55.8749 li
57.098 57.2912 li
57.098 58.3258 li
57.098 59.8749 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 54.7972 164.125 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.5601 62.4441 mo
70.4985 62.417 70.4305 62.402 70.359 62.402 cv
68.859 62.402 li
68.859 61.591 li
69.0827 61.6994 li
69.153 61.7334 69.2272 61.7495 69.3004 61.7495 cv
69.486 61.7495 69.6644 61.6457 69.7507 61.4675 cv
69.8711 61.219 69.7673 60.9199 69.5188 60.7994 cv
68.859 60.4797 li
68.859 59.707 li
70.359 59.707 li
70.4305 59.707 70.4985 59.692 70.5601 59.6649 cv
70.5601 62.4441 li
67.859 62.402 mo
66.56 62.402 li
66.56 60.8335 li
67.859 61.1778 li
67.859 62.402 li
67.859 60.1432 mo
66.5988 59.8092 li
66.5859 59.8058 66.573 59.8029 66.56 59.8006 cv
66.56 59.707 li
67.859 59.707 li
67.859 60.1432 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 4 65.5601 162.008 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#RJ#QrV^YQU8%VV8P'0nCe%&g~>
<~6q"SY#RJ&Ss8R%WUSIk\8kK?pD+I8k~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
69.3004 61.7495 mo
69.2272 61.7495 69.153 61.7334 69.0827 61.6994 cv
68.859 61.591 li
68.859 60.4797 li
69.5188 60.7994 li
69.7673 60.9199 69.8711 61.219 69.7507 61.4675 cv
69.6644 61.6457 69.486 61.7495 69.3004 61.7495 cv
67.859 61.1778 mo
66.56 60.8335 li
66.56 59.8006 li
66.573 59.8029 66.5859 59.8058 66.5988 59.8092 cv
67.859 60.1432 li
67.859 61.1778 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[5 0 0 4 65.5601 162.008 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.5601 62.9915 mo
66.56 62.9915 li
66.56 62.402 li
67.859 62.402 li
67.859 61.1778 li
67.859 60.1432 li
67.859 59.707 li
66.56 59.707 li
66.56 58.9915 li
70.5601 58.9915 li
70.5601 59.6649 li
70.4985 59.692 70.4305 59.707 70.359 59.707 cv
68.859 59.707 li
68.859 60.4797 li
68.859 61.591 li
68.859 62.402 li
70.359 62.402 li
70.4305 62.402 70.4985 62.417 70.5601 62.4441 cv
70.5601 62.9915 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 65.5601 161.008 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
93.0083 73.281 mo
92.387 73.281 li
92.387 71.113 li
93.887 71.113 li
93.9577 71.113 94.0249 71.0983 94.0858 71.0719 cv
94.0858 72.9737 li
93.7656 72.7746 li
93.6834 72.7234 93.5922 72.6991 93.502 72.6991 cv
93.335 72.6991 93.1717 72.7828 93.077 72.9351 cv
93.0102 73.0425 92.9891 73.1653 93.0083 73.281 cv
91.387 73.281 mo
90.0858 73.281 li
90.0858 71.8777 li
90.6802 72.1658 li
90.7505 72.1999 90.8248 72.216 90.8979 72.216 cv
91.0836 72.216 91.2619 72.1122 91.3483 71.9339 cv
91.3659 71.8975 91.3787 71.86 91.387 71.8222 cv
91.387 73.281 li
91.387 71.61 mo
91.3555 71.4651 91.2602 71.3356 91.1164 71.2659 cv
90.8008 71.113 li
91.387 71.113 li
91.387 71.61 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 4 89.0858 150.604 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#RJ#QrV^YQU8%VV8P'0nCe%&g~>
<~6q"SY#RJ&Ss8R%WUSIk\8kK?pD+I8k~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0858 73.2933 mo
93.9977 73.2933 li
93.9621 73.2852 93.925 73.281 93.887 73.281 cv
93.0083 73.281 li
92.9891 73.1653 93.0102 73.0425 93.077 72.9351 cv
93.1717 72.7828 93.335 72.6991 93.502 72.6991 cv
93.5922 72.6991 93.6834 72.7234 93.7656 72.7746 cv
94.0858 72.9737 li
94.0858 73.2933 li
90.8979 72.216 mo
90.8248 72.216 90.7505 72.1999 90.6802 72.1658 cv
90.0858 71.8777 li
90.0858 71.113 li
90.8008 71.113 li
91.1164 71.2659 li
91.2602 71.3356 91.3555 71.4651 91.387 71.61 cv
91.387 71.8222 li
91.3787 71.86 91.3659 71.8975 91.3483 71.9339 cv
91.2619 72.1122 91.0836 72.216 90.8979 72.216 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 4 89.0858 150.604 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
90.0858 74.0534 mo
90.0858 74.0534 li
90.0858 73.281 li
91.387 73.281 li
91.387 71.8222 li
91.387 71.61 li
91.387 71.113 li
90.8008 71.113 li
90.0858 71.113 li
90.0858 70.396 li
94.0858 70.396 li
94.0858 71.0719 li
94.0249 71.0983 93.9577 71.113 93.887 71.113 cv
92.387 71.113 li
92.387 73.281 li
93.0083 73.281 li
93.887 73.281 li
93.925 73.281 93.9621 73.2852 93.9977 73.2933 cv
90.0858 73.2933 li
90.0858 74.0534 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 89.0858 149.604 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.612 89.0226 mo
113.612 89.0226 li
113.612 88.379 li
117.41 88.379 li
117.482 88.379 117.55 88.3639 117.612 88.3367 cv
117.612 88.5992 li
113.612 88.5992 li
113.612 89.0226 li
117.612 87.4213 mo
117.55 87.3941 117.482 87.379 117.41 87.379 cv
116.987 87.379 li
117.025 87.3256 117.054 87.2637 117.069 87.1954 cv
117.13 86.9259 116.96 86.6586 116.691 86.5983 cv
115.91 86.4236 li
115.91 86.266 li
117.41 86.266 li
117.482 86.266 117.55 86.2509 117.612 86.2237 cv
117.612 87.4213 li
114.91 87.379 mo
113.612 87.379 li
113.612 86.2943 li
113.614 86.2956 113.616 86.2969 113.618 86.2982 cv
114.91 87.1019 li
114.91 87.379 li
117.612 85.3083 mo
117.55 85.2811 117.482 85.266 117.41 85.266 cv
115.41 85.266 li
115.41 85.266 li
115.41 85.266 li
113.612 85.266 li
113.612 85.0225 li
117.612 85.0225 li
117.612 85.3083 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 112.612 134.977 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#REdb\=X$4]"7k=Df;AErUEHN#RG6:!!!91Ce"I*~>
<~6q"SY#REgd\Y'36]=\+CE,_SIs78iT#RG9<!!!91D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
116.987 87.379 mo
115.91 87.379 li
115.91 86.4236 li
116.691 86.5983 li
116.96 86.6586 117.13 86.9259 117.069 87.1954 cv
117.054 87.2637 117.025 87.3256 116.987 87.379 cv
114.91 87.1019 mo
113.618 86.2982 li
113.616 86.2969 113.614 86.2956 113.612 86.2943 cv
113.612 86.266 li
114.91 86.266 li
114.91 87.1019 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 112.612 136.977 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.41 88.379 mo
113.612 88.379 li
113.612 87.379 li
114.91 87.379 li
114.91 87.1019 li
114.91 86.266 li
113.612 86.266 li
113.612 85.266 li
115.41 85.266 li
115.41 85.266 li
115.41 85.266 li
117.41 85.266 li
117.482 85.266 117.55 85.2811 117.612 85.3083 cv
117.612 86.2237 li
117.55 86.2509 117.482 86.266 117.41 86.266 cv
115.91 86.266 li
115.91 86.4236 li
115.91 87.379 li
116.987 87.379 li
117.41 87.379 li
117.482 87.379 117.55 87.3941 117.612 87.4213 cv
117.612 88.3367 li
117.55 88.3639 117.482 88.379 117.41 88.379 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 112.612 135.977 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 91.4657 mo
137.912 91.348 li
138.438 91.348 li
138.438 91.4657 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 137.137 131.71 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0+o*6!!!f8!r~>
<~Bu[I!rVa,%o)~>
<~C<*[&s8TP-o`~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
137.137 92.1993 mo
137.137 92.1993 li
137.137 91.348 li
137.912 91.348 li
138.438 91.4657 li
138.438 91.6886 li
137.137 91.6886 li
137.137 92.1993 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 136.137 131.71 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 91.6886 mo
140.389 91.6886 li
140.297 91.5928 140.168 91.5337 140.027 91.5337 cv
140.019 91.5337 140.01 91.5339 140.001 91.5344 cv
139.438 91.5635 li
139.438 91.473 li
141.137 91.473 li
141.137 91.6886 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 138.137 131.71 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~\=X$4rV^YQrUEHN~>
<~\Y'36s8R%Ws78iT~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 91.473 mo
139.438 91.473 li
139.438 91.348 li
140.938 91.348 li
141.009 91.348 141.076 91.3333 141.137 91.3067 cv
141.137 91.473 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 138.137 131.71 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~&f<er!!"8i!!=f)~>
<~`j.TbrV_\6rUXoE~>
<~a0Rffs8S(<s7L;K~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
140.389 91.6886 mo
139.438 91.6886 li
139.438 91.5635 li
140.001 91.5344 li
140.01 91.5339 140.019 91.5337 140.027 91.5337 cv
140.168 91.5337 140.297 91.5928 140.389 91.6886 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 138.137 131.71 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 90.3893 mo
141.076 90.3627 141.009 90.348 140.938 90.348 cv
138.938 90.348 li
138.938 90.348 li
138.938 90.348 li
137.137 90.348 li
137.137 90.2901 li
141.137 90.2901 li
141.137 90.3893 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 136.137 132.71 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 91.6886 mo
138.438 91.6886 li
138.438 91.348 li
137.912 91.348 li
137.137 91.348 li
137.137 90.348 li
138.938 90.348 li
138.938 90.348 li
138.938 90.348 li
140.938 90.348 li
141.009 90.348 141.076 90.3627 141.137 90.3893 cv
141.137 91.3067 li
141.076 91.3333 141.009 91.348 140.938 91.348 cv
139.438 91.348 li
139.438 91.473 li
139.438 91.5635 li
139.438 91.6886 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 136.137 132.71 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V56@Tg=iC"5#g7i4?NTDIXV~>
<~e'm^J`l?KVmHDR0mdC&Ph;&~>
<~6q"SY#REgd\Y'36]=\+CE,Y~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
229.359 89.7301 mo
227.66 89.7301 li
227.66 88.559 li
229.16 88.559 li
229.231 88.559 229.298 88.5443 229.359 88.5179 cv
229.359 89.7301 li
226.66 89.7301 mo
225.359 89.7301 li
225.359 88.559 li
226.66 88.559 li
226.66 89.7301 li
229.359 87.6001 mo
229.298 87.5736 229.231 87.559 229.16 87.559 cv
227.66 87.559 li
227.66 87.504 li
229.16 87.504 li
229.231 87.504 229.298 87.4893 229.359 87.4629 cv
229.359 87.6001 li
226.411 87.559 mo
225.359 87.559 li
225.359 87.504 li
226.412 87.504 li
226.411 87.5221 226.411 87.5404 226.411 87.559 cv
229.359 86.5451 mo
229.298 86.5186 229.231 86.504 229.16 86.504 cv
227.66 86.504 li
227.66 85.7301 li
229.359 85.7301 li
229.359 86.5451 li
226.66 86.504 mo
225.359 86.504 li
225.359 85.7301 li
226.66 85.7301 li
226.66 86.504 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 224.359 134.27 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#REdb\=X$4]"7k=Df;AErUEHN#RG6:!!!91Ce"I*~>
<~6q"SY#REgd\Y'36]=\+CE,_SIs78iT#RG9<!!!91D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
227.66 89.7301 mo
226.66 89.7301 li
226.66 88.559 li
227.66 88.559 li
227.66 89.7301 li
227.66 86.504 mo
227.16 86.504 li
227.16 86.504 li
227.16 86.504 li
226.66 86.504 li
226.66 85.7301 li
227.66 85.7301 li
227.66 86.504 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 225.359 134.27 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0+o*T&f;2\!#GV;4s_gF,q]~>
<~Bu[Gm`j3Y`rNuOp3JhQ4M/3~>
<~C<*Yqa0Wnfs0ht#3f@i9Mer~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
226.66 87.559 mo
226.411 87.559 li
226.411 87.5404 226.411 87.5221 226.412 87.504 cv
226.66 87.504 li
226.66 87.559 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 225.359 135.27 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
229.16 88.559 mo
227.66 88.559 li
226.66 88.559 li
225.359 88.559 li
225.359 87.559 li
226.411 87.559 li
226.66 87.559 li
226.66 87.504 li
226.412 87.504 li
225.359 87.504 li
225.359 86.504 li
226.66 86.504 li
227.16 86.504 li
227.16 86.504 li
227.16 86.504 li
227.66 86.504 li
229.16 86.504 li
229.231 86.504 229.298 86.5186 229.359 86.5451 cv
229.359 87.4629 li
229.298 87.4893 229.231 87.504 229.16 87.504 cv
227.66 87.504 li
227.66 87.559 li
229.16 87.559 li
229.231 87.559 229.298 87.5736 229.359 87.6001 cv
229.359 88.5179 li
229.298 88.5443 229.231 88.559 229.16 88.559 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 4 224.359 135.27 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 166.161 mo
39.453 166.161 li
39.453 164.65 li
41.1529 165.206 li
41.1529 166.161 li
41.1529 164.154 mo
39.453 163.598 li
39.453 162.161 li
41.1529 162.161 li
41.1529 164.154 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 6 38.1529 57.8386 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 6 
/M[4 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~\=X$4\=X$4rV^YQrUEHNCe"I*Ce"I*~>
<~\Y'36\Y'36s8R%Ws78iTD+FX,D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 165.206 mo
39.453 164.65 li
39.453 163.598 li
41.1529 164.154 li
41.1529 165.206 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 4 38.1529 58.8386 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
38.453 166.161 mo
37.1529 166.161 li
37.1529 162.161 li
38.453 162.161 li
38.453 163.948 li
38.4528 163.957 38.4528 163.965 38.453 163.974 cv
38.453 166.161 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 36.1529 57.8386 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~6US@N6b'_=rM$%b#RG5P#]'~>
<~6q"RR7(KqAs.c@h#RG8Q#]0~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
38.453 163.974 mo
38.4528 163.965 38.4528 163.957 38.453 163.948 cv
38.453 163.974 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 37.1529 58.8386 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
39.453 166.161 mo
38.453 166.161 li
38.453 162.161 li
39.453 162.161 li
39.453 163.598 li
39.453 164.65 li
39.453 166.161 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 37.1529 57.8386 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V*7kT5#aWE!)W_(g4>sOJY<~>
<~e*ZAJmHF!:rTO4V`n](`gsc~>
<~7(JsY\Y-S7s.fVc#]3*<D+F~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
58.7972 171.932 mo
57.098 171.932 li
57.098 170.154 li
58.7972 169.872 li
58.7972 171.932 li
57.098 169.14 mo
57.098 167.932 li
58.7972 167.932 li
58.7972 168.859 li
57.098 169.14 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 6 55.7972 52.0682 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 6 
/M[4 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~\=X$4\=X$4rV^YQrUEHNCe"I*Ce"I*~>
<~\Y'36\Y'36s8R%Ws78iTD+FX,D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
57.098 170.154 mo
57.098 169.14 li
58.7972 168.859 li
58.7972 169.872 li
57.098 170.154 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 55.7972 54.0682 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
56.098 171.932 mo
54.7972 171.932 li
54.7972 169.667 li
56.098 170.093 li
56.098 171.932 li
56.098 169.04 mo
54.7972 168.615 li
54.7972 167.932 li
56.098 167.932 li
56.098 169.04 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 53.7972 52.0682 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~6US@N6b'_=rM$%b#RG5P#]'~>
<~6q"RR7(KqAs.c@h#RG8Q#]0~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
56.098 170.093 mo
54.7972 169.667 li
54.7972 168.615 li
56.098 169.04 li
56.098 170.093 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 53.7972 54.0682 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
57.098 171.932 mo
56.098 171.932 li
56.098 170.093 li
56.098 169.04 li
56.098 167.932 li
57.098 167.932 li
57.098 169.14 li
57.098 170.154 li
57.098 171.932 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 54.7972 52.0682 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
69.6167 166.851 mo
68.859 166.851 li
68.859 166.695 li
70.1029 166.695 li
69.6167 166.851 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 67.5601 56.0202 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~\=X$4rV^YQrUEHN~>
<~\Y'36s8R%Ws78iT~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.5601 166.851 mo
69.6167 166.851 li
70.1029 166.695 li
70.359 166.695 li
70.4305 166.695 70.4985 166.68 70.5601 166.653 cv
70.5601 166.851 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 68.5601 56.0202 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.859 166.851 mo
66.7324 166.851 li
66.56 166.726 li
66.56 166.695 li
67.859 166.695 li
67.859 166.851 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 65.5601 56.0202 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~6USAp])A@tr;~>
<~6q"St]DnY$rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
68.859 166.851 mo
67.859 166.851 li
67.859 166.695 li
66.56 166.695 li
66.56 165.98 li
70.5601 165.98 li
70.5601 166.653 li
70.4985 166.68 70.4305 166.695 70.359 166.695 cv
70.1029 166.695 li
68.859 166.695 li
68.859 166.851 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 65.5601 57.0202 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
66.56 167.962 mo
66.56 167.962 li
66.56 166.726 li
66.7324 166.851 li
66.56 166.851 li
66.56 167.962 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 65.5601 56.0202 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V56@<49/5U!!~>
<~e'm^PmeuA5r;~>
<~6q"St]DnY$rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0858 162.416 mo
90.0858 162.416 li
90.0858 162.301 li
93.887 162.301 li
93.9577 162.301 94.0249 162.286 94.0858 162.26 cv
94.0858 162.416 li
94.0858 161.342 mo
94.0249 161.316 93.9577 161.301 93.887 161.301 cv
92.387 161.301 li
92.387 160.518 li
94.0858 159.631 li
94.0858 161.342 li
92.387 159.39 mo
92.387 159.21 li
92.7313 159.21 li
92.387 159.39 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 89.0858 61.5843 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#RJ#QrV^YQU8%VV8P'0nCe"I*#RG6:!!!~>
<~6q"SY#RJ&Ss8R%WUSIk\8kK?pD+FX,#RG9<!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
92.387 160.518 mo
92.387 159.39 li
92.7313 159.21 li
94.0858 159.21 li
94.0858 159.631 li
92.387 160.518 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 91.0858 63.5843 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
91.387 161.301 mo
90.1431 161.301 li
91.387 160.901 li
91.387 161.301 li
90.0858 160.269 mo
90.0858 158.461 li
90.0858 159.21 li
91.387 159.21 li
91.387 159.851 li
90.0858 160.269 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 5 89.0858 62.5843 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~6US@N6b'_=rM$%b#RG5~>
<~6q"RR7(KqAs.c@h#RG8~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
90.1431 161.301 mo
90.0858 161.301 li
90.0858 160.269 li
91.387 159.851 li
91.387 160.901 li
90.1431 161.301 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 4 89.0858 62.5843 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]n~>
<~s8W-!s8W-!s8W-!~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
93.887 162.301 mo
90.0858 162.301 li
90.0858 161.301 li
90.1431 161.301 li
91.387 161.301 li
91.387 160.901 li
91.387 159.851 li
91.387 159.21 li
92.387 159.21 li
92.387 159.39 li
92.387 160.518 li
92.387 161.301 li
93.887 161.301 li
93.9577 161.301 94.0249 161.316 94.0858 161.342 cv
94.0858 162.26 li
94.0249 162.286 93.9577 162.301 93.887 162.301 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 89.0858 61.5843 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.612 148.305 mo
113.612 146.131 li
114.91 146.131 li
114.91 146.443 li
113.612 146.443 li
113.612 148.305 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 4 112.612 75.8688 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~6US@N6b'_=rM$%b~>
<~6q"RR7(KqAs.c@h~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.612 146.443 mo
115.91 146.443 li
115.91 146.131 li
117.612 146.131 li
117.612 146.443 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 114.612 76.8688 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~\=X$4\=X$4rV^YQ~>
<~\Y'36\Y'36s8R%W~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
115.91 146.443 mo
114.91 146.443 li
114.91 146.131 li
115.91 146.131 li
115.91 146.443 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 113.612 76.8688 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
137.137 143.289 mo
137.137 143.289 li
137.137 142.841 li
138.438 142.841 li
138.438 143.067 li
137.137 143.067 li
137.137 143.289 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 136.137 80.1588 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~6US@N6b'_=r;~>
<~6q"RR7(KqArr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 143.067 mo
139.438 143.067 li
139.438 142.841 li
141.137 142.841 li
141.137 143.067 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 138.137 80.1588 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!~>
<~\=X$4\=X$4rV^YQ~>
<~\Y'36\Y'36s8R%W~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 143.067 mo
138.438 143.067 li
138.438 142.841 li
139.438 142.841 li
139.438 143.067 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 137.137 80.1588 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V*7kT5#aWE!!~>
<~e*ZAJmHF!:r;~>
<~7(JsY\Y-S7rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
229.359 139.304 mo
227.66 139.304 li
227.66 137.112 li
227.66 137.108 227.66 137.103 227.66 137.099 cv
227.66 135.304 li
229.359 135.304 li
229.359 139.304 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 6 226.359 84.6963 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 6 
/M[4 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~\=X$4\=X$4rV^YQrUEHNCe"I*Ce"I*~>
<~\Y'36\Y'36s8R%Ws78iTD+FX,D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
227.66 137.112 mo
227.66 137.099 li
227.66 137.103 227.66 137.108 227.66 137.112 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 226.359 85.6963 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
226.66 139.304 mo
225.359 139.304 li
225.359 137.761 li
226.66 137.65 li
226.66 139.304 li
225.359 136.757 mo
225.359 135.304 li
226.66 135.304 li
226.66 136.646 li
225.359 136.757 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 224.359 84.6963 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~6US@N6b'_=rM$%b#RG5P#]'~>
<~6q"RR7(KqAs.c@h#RG8Q#]0~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
225.359 137.761 mo
225.359 136.757 li
226.66 136.646 li
226.66 137.65 li
225.359 137.761 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 224.359 86.6963 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!~>
<~rVc]nrVc]nr;~>
<~s8W-!s8W-!rr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
227.66 139.304 mo
226.66 139.304 li
226.66 137.65 li
226.66 136.646 li
226.66 135.304 li
227.66 135.304 li
227.66 137.099 li
227.66 137.112 li
227.66 139.304 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 225.359 84.6963 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 60.3716 mo
39.453 60.3716 li
39.453 58.954 li
41.1529 59.7397 li
41.1529 60.3716 li
38.453 60.3716 mo
37.1529 60.3716 li
37.1529 56.3716 li
38.453 56.3716 li
38.453 58.1597 li
38.4528 58.1677 38.4528 58.1757 38.453 58.1836 cv
38.453 60.3716 li
41.1529 58.638 mo
39.453 57.8523 li
39.453 56.3716 li
41.1529 56.3716 li
41.1529 58.638 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 36.1529 163.628 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 59.7397 mo
39.453 58.954 li
39.453 57.8523 li
41.1529 58.638 li
41.1529 59.7397 li
38.453 58.1836 mo
38.4528 58.1757 38.4528 58.1677 38.453 58.1597 cv
38.453 58.1836 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[5 0 0 4 37.1529 164.628 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibS~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
39.453 60.3716 mo
38.453 60.3716 li
38.453 58.1836 li
38.453 58.1597 li
38.453 56.3716 li
39.453 56.3716 li
39.453 57.8523 li
39.453 58.954 li
39.453 60.3716 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 37.1529 163.628 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
58.7972 68.5277 mo
57.098 68.5277 li
57.098 66.9066 li
58.0703 67.049 li
58.0949 67.0526 58.1193 67.0543 58.1434 67.0543 cv
58.3874 67.0543 58.601 66.8754 58.6374 66.6268 cv
58.6775 66.3535 58.4884 66.0996 58.2152 66.0596 cv
57.098 65.8959 li
57.098 64.5276 li
58.7972 64.5276 li
58.7972 68.5277 li
56.098 68.5277 mo
54.7972 68.5277 li
54.7972 65.7965 li
54.8208 65.958 54.923 66.1046 55.0822 66.1782 cv
56.098 66.6477 li
56.098 68.5277 li
54.7972 65.6517 mo
54.7972 64.5276 li
56.098 64.5276 li
56.098 65.5461 li
55.5017 65.2704 li
55.4338 65.2391 55.3625 65.2242 55.2923 65.2242 cv
55.1034 65.2242 54.9226 65.3318 54.8381 65.5146 cv
54.8175 65.5592 54.804 65.6054 54.7972 65.6517 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 53.7972 155.472 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
58.1434 67.0543 mo
58.1193 67.0543 58.0949 67.0526 58.0703 67.049 cv
57.098 66.9066 li
57.098 65.8959 li
58.2152 66.0596 li
58.4884 66.0996 58.6775 66.3535 58.6374 66.6268 cv
58.601 66.8754 58.3874 67.0543 58.1434 67.0543 cv
56.098 66.6477 mo
55.0822 66.1782 li
54.923 66.1046 54.8208 65.958 54.7972 65.7965 cv
54.7972 65.6517 li
54.804 65.6054 54.8175 65.5592 54.8381 65.5146 cv
54.9226 65.3318 55.1034 65.2242 55.2923 65.2242 cv
55.3625 65.2242 55.4338 65.2391 55.5017 65.2704 cv
56.098 65.5461 li
56.098 66.6477 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 4 53.7972 156.472 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibSiSibS~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
57.098 68.5277 mo
56.098 68.5277 li
56.098 66.6477 li
56.098 65.5461 li
56.098 64.5276 li
57.098 64.5276 li
57.098 65.8959 li
57.098 66.9066 li
57.098 68.5277 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 54.7972 155.472 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.5601 70.2517 mo
66.56 70.2517 li
66.56 69.609 li
70.359 69.609 li
70.4305 69.609 70.4985 69.594 70.5601 69.5669 cv
70.5601 70.2517 li
70.5601 68.6511 mo
70.527 68.6365 70.4921 68.6255 70.4557 68.6184 cv
70.4997 68.3717 70.3526 68.1258 70.1067 68.0522 cv
68.859 67.6787 li
68.859 67.496 li
70.359 67.496 li
70.4305 67.496 70.4985 67.481 70.5601 67.4539 cv
70.5601 68.6511 li
67.859 68.609 mo
66.56 68.609 li
66.56 67.9701 li
66.6046 68.1655 66.765 68.3228 66.9752 68.3536 cv
67.859 68.4831 li
67.859 68.609 li
66.56 67.7482 mo
66.56 67.496 li
66.7037 67.496 li
66.6338 67.5621 66.5825 67.6487 66.56 67.7482 cv
70.5601 66.5381 mo
70.4985 66.511 70.4305 66.496 70.359 66.496 cv
68.359 66.496 li
68.359 66.496 li
68.359 66.496 li
66.56 66.496 li
66.56 66.2517 li
70.5601 66.2517 li
70.5601 66.5381 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 65.5601 153.748 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.4557 68.6184 mo
70.4244 68.6122 70.3921 68.609 70.359 68.609 cv
68.859 68.609 li
68.859 67.6787 li
70.1067 68.0522 li
70.3526 68.1258 70.4997 68.3717 70.4557 68.6184 cv
67.859 68.4831 mo
66.9752 68.3536 li
66.765 68.3228 66.6046 68.1655 66.56 67.9701 cv
66.56 67.7482 li
66.5825 67.6487 66.6338 67.5621 66.7037 67.496 cv
67.859 67.496 li
67.859 68.4831 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 65.5601 155.748 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.359 69.609 mo
66.56 69.609 li
66.56 68.609 li
67.859 68.609 li
67.859 68.4831 li
67.859 67.496 li
66.7037 67.496 li
66.56 67.496 li
66.56 66.496 li
68.359 66.496 li
68.359 66.496 li
68.359 66.496 li
70.359 66.496 li
70.4305 66.496 70.4985 66.511 70.5601 66.5381 cv
70.5601 67.4539 li
70.4985 67.481 70.4305 67.496 70.359 67.496 cv
68.859 67.496 li
68.859 67.6787 li
68.859 68.609 li
70.359 68.609 li
70.3921 68.609 70.4244 68.6122 70.4557 68.6184 cv
70.4921 68.6255 70.527 68.6365 70.5601 68.6511 cv
70.5601 69.5669 li
70.4985 69.594 70.4305 69.609 70.359 69.609 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 65.5601 154.748 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0858 77.2933 mo
90.0858 77.2933 li
90.0858 75.0768 li
91.6747 75.5524 li
92.549 76.1212 li
92.6332 76.176 92.7278 76.2022 92.8212 76.2022 cv
92.9847 76.2022 93.145 76.1221 93.2408 75.9748 cv
93.3914 75.7434 93.3259 75.4336 93.0944 75.283 cv
92.1596 74.6749 li
92.0304 74.615 li
91.2987 74.396 li
94.0858 74.396 li
94.0858 74.2399 li
94.0858 74.2399 li
94.0858 77.2933 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 89.0858 146.707 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7%*%iSe9VOHAGP5sY_\?pF\l#7"X%!!!~>
<~1c15>"pU0N`5G\WI=9&G3B79J<&XdW"pS$c!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
92.8212 76.2022 mo
92.7278 76.2022 92.6332 76.176 92.549 76.1212 cv
91.6747 75.5524 li
90.0858 75.0768 li
90.0858 74.396 li
91.2987 74.396 li
92.0304 74.615 li
92.1596 74.6749 li
93.0944 75.283 li
93.3259 75.4336 93.3914 75.7434 93.2408 75.9748 cv
93.145 76.1221 92.9847 76.2022 92.8212 76.2022 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[5 0 0 4 89.0858 147.707 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibS~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0858 74.396 mo
91.2987 74.396 li
90.9145 74.281 li
93.887 74.281 li
93.9577 74.281 94.0249 74.2663 94.0858 74.2399 cv
94.0858 74.396 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3.52941 0 0 .705882 90.7917 150.295 ]ct
snap_to_device
<<
/T 1
/W 15 
/H 3 
/M[15 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~H]Y)5Z`pO1OE=JZ,pak!U:/(Z_8!XYLMB@@3]a.H`miJcdEo@lI9fZG:]~>
<~I?^Y9YcXn$OE=DQ+<VecT<Gf7[Bd$-K4@,%1GbN#\%fYj]Xt/*F&GIs7K~>
<~',MH!'GM2n'bh&Y!!!!0&ePQ^%1N^W&IS[@!!!B8$O-e>"pGAD#m(),!!~>
<~!!!!!!!!!!!<rl6!!!!!!!!!!!!!!""UG21!!!!!!!!!!!!!$&#6Or+!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0858 73.3221 mo
94.0577 73.3099 94.0282 73.3002 93.9977 73.2933 cv
94.0858 73.2933 li
94.0858 73.3221 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[.705882 0 0 .705882 93.8505 151.236 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~&J5Tf&eY`e&-~>
<~qtp9fqtp0`p]~>
<~p\4FVp\47Lnc~>
<~"pP8A%LrsY%K~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
93.887 74.281 mo
90.9145 74.281 li
90.2247 74.0745 li
90.1784 74.0607 90.1318 74.0538 90.0858 74.0534 cv
90.0858 73.2933 li
93.9977 73.2933 li
94.0282 73.3002 94.0577 73.3099 94.0858 73.3221 cv
94.0858 74.2399 li
94.0249 74.2663 93.9577 74.281 93.887 74.281 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4.47059 0 0 1.41176 89.8505 150.53 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 6 
/M[19 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&SXG\%E`Y@D&J5U;4?Q&=FcN2eR?NYR>X'8B&e[;h4@NS!NhW)4PE'fk4rk1G&4K#V:1\g;
W2#uRQ$m(-*Y8ko?=$rLH]Y)5Z`pO1OE=JZ,paj\G'8:qU:/(Z_8!XYLMB@@3][~>
<~mdBN0jknb@e^iC+iT]n.qtp9YmdBH'hq?N0f%A[7l1+QGqtogLmd0&mg!nR'f\,6JnFlYPq!@A6l/UUO
e'uq!fA>ZWp%eFZjlPUahV$B(d*^7hg#;/`o^qe5hr!8CeBc=^bg"D^gu@Vemd:~>
<~]=Y\[Q$Qb,9i>)"I\OjIp\4Eo]=Y>5H<s*9;HR7SU;lKmp\2;3]<RWI?:R^f=C-HN`oZd^o!,I)Vi5Xt
5t4LE<d'nBhsTq#Q'IVnFBh3f1cRT_?\5#le^`2qH$OC77kl)0,UY'4CQ#C0]tF~>
<~!!!!!!!!!!!!!!!!!*0+"pP83!!!!!!!!!!!!!!!":G_M%LrI=!!!!!!!!!!!!!$*%hK3\%KHJ/!!!!!
!!!!!!!*<5"T\W)!!!!!!!!!!!!!!!!<rl6!!!!!!!!!!!!!!!!!!!""UG21!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
91.2987 74.396 mo
90.0858 74.396 li
90.0858 74.0534 li
90.1318 74.0538 90.1784 74.0607 90.2247 74.0745 cv
90.9145 74.281 li
91.2987 74.396 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.64706 0 0 .941176 89.8505 150.295 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 4 
/M[7 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~gY:K6bf@`Zh;-c3c-5&$hV-K,db`j;gt:31~>
<~`Pog:aihlH`Poj<aiVN@`Q#s>aMl-;`Q#s<~>
<~#6tJB(`jb&"U,2G(Dd2W":,MN&H`+;"q(hI~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.612 92.5992 mo
113.612 92.5992 li
113.612 91.473 li
117.612 91.473 li
117.612 92.5992 li
114.966 90.473 mo
113.612 90.473 li
113.612 89.0226 li
117.612 89.0226 li
117.612 88.5992 li
117.612 90.1828 li
115.527 89.909 li
115.504 89.9061 115.483 89.9047 115.461 89.9047 cv
115.214 89.9047 114.999 90.0879 114.966 90.3397 cv
114.96 90.385 114.96 90.4298 114.966 90.473 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 112.612 131.401 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.612 91.473 mo
113.612 91.473 li
113.612 90.473 li
114.966 90.473 li
114.996 90.6907 115.168 90.8705 115.396 90.9005 cv
117.612 91.1915 li
117.612 91.473 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 112.612 132.401 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~[^P/RLPMe*iRr-f77DoI5X5~>
<~SXm^;F*!G)`4]G^3&kn_1G]~>
<~%LrI=*?>e,!!4Gm1,9ms1c,~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.612 91.1915 mo
115.396 90.9005 li
115.168 90.8705 114.996 90.6907 114.966 90.473 cv
114.96 90.4298 114.96 90.385 114.966 90.3397 cv
114.999 90.0879 115.214 89.9047 115.461 89.9047 cv
115.483 89.9047 115.504 89.9061 115.527 89.909 cv
117.612 90.1828 li
117.612 91.1915 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[5 0 0 4 113.612 132.401 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibS~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.612 89.0226 mo
113.612 89.0226 li
113.612 88.5992 li
117.612 88.5992 li
117.612 89.0226 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4.47059 0 0 .941176 113.376 135.695 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 4 
/M[19 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&SXG\%G$6pD#mgo#4?Q&=FcN2eR?NYS=ZI6&#7!@R4@NS!NhW)4PE'fh3>Mi)#=V'M:1\g;
W2#uRQ$m(,*Y/bl~>
<~5<hA+D2=dcW2-&RJn74a#RC\s3]]fGKUf*?U7@O!@6>5."pR+L3_3t<S?&N]S<eY54;7u(#!tXC:N))^
Xf8.hRY59>)\!5c~>
<~$47+O)^6LL+<M[G*uu"!!WiE-"pPJQ+!;UG*?6"<)%QiM!!!3-"q2=j+<DRE*#fk8%g2k4!!WW3$Psg)
*#fh8)&a>%"98E%~>
<~!!!!!!!!!!!!!!!!=0,>!s8W*!!!!!!!!!!!!!!"#Rgk:!!!!!!!!!!!!!!!!!!$*$j?V2!!!!!!!!!!
!!!!!!!*<4"98E%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 95.6703 mo
141.076 95.6437 141.009 95.629 140.938 95.629 cv
139.438 95.629 li
139.438 94.703 li
140.938 94.703 li
141.009 94.703 141.076 94.6883 141.137 94.6617 cv
141.137 95.6703 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 138.137 128.311 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iRU:\?pF\l?pF\l~>
<~`4J#i<&XdW<&XdW~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
140.938 94.703 mo
139.438 94.703 li
139.438 94.2902 li
141.137 94.2902 li
141.137 93.7443 li
141.137 93.7443 li
141.137 94.6617 li
141.076 94.6883 141.009 94.703 140.938 94.703 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 138.137 129.311 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSe9ViRU:\?pF\l~>
<~`5L`t`5h62jmE$F~>
<~!!&(@!"?9CP.1Jk~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 95.629 mo
137.137 95.629 li
137.137 94.703 li
138.438 94.703 li
138.438 95.629 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 136.137 128.311 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~OHAE+#@IcA?i~>
<~I=9$<##kd2;u~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 94.703 mo
138.438 94.703 li
137.137 94.703 li
137.137 94.2902 li
138.438 94.2902 li
138.438 94.703 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 136.137 128.311 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~OHAE+#@IcA?i~>
<~g"F=@qrR_PjT~>
<~>[.:'pQG:FOo~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 95.6886 mo
137.137 95.6886 li
137.137 95.629 li
138.438 95.629 li
138.438 94.703 li
138.438 94.2902 li
139.438 94.2902 li
139.438 94.703 li
139.438 95.629 li
140.938 95.629 li
141.009 95.629 141.076 95.6437 141.137 95.6703 cv
141.137 95.6886 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 136.137 128.311 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 93.7443 mo
141.076 93.7177 141.009 93.703 140.938 93.703 cv
139.438 93.703 li
139.438 92.5648 li
140.053 92.533 li
140.328 92.5188 140.54 92.2837 140.526 92.0079 cv
140.52 91.8835 140.468 91.7721 140.389 91.6886 cv
141.137 91.6886 li
141.137 93.7443 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 2.58824 139.255 130.958 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 11 
/M[9 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~PE'Z]1(slt#Et0g;DJmj#7$HQE`+Y+#6tL&Q$HOo)@m>hXJq1s:GF.A-,7*dK4RM53]b[8[[;GM<E3&X
iQ&$^FD,?$hql;MMeld/@,9VSUP!&V<E7f,]q0US8kM\~>
<~dF$"@Q#0`0>M.WV^nu[&EH0U_cb5utBP;)0e]k[rF_##nd*TqGSTe[XB$8E=\=\(^C21`,_6]VXD/F..
`4iFCHYmV:`5B*]N,)['>f+=_RXJ=392!+:Xcmd#5s[d~>
<~;-%7EC0jqA<`i[HH@'[KCi!0YD0C&:@q0"F<+Kf\?<C<34$HGC=\_IW7j]WG7n>g'3&hE[+tk]&-RU8A
!"g4o*#KM0!<N`H(_R8e%0?S=&.SmH!s8T,#n71B!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!<E3$
!!!$&#6tJ=!!!!$#7:bD#ljr*":,58"9\])!!EN/!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 92.5648 mo
139.438 91.6886 li
140.389 91.6886 li
140.468 91.7721 140.52 91.8835 140.526 92.0079 cv
140.54 92.2837 140.328 92.5188 140.053 92.533 cv
139.438 92.5648 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.41176 0 0 1.41176 139.255 132.135 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~PE'Z]1)#k3E`+Y+PE'Z]1)$+AH!36IXJq1s:GKVsTn?oG~>
<~f\,3HnG(Yhi99\*f\,3HnG(SdhWF8"dF-_,l1*$CeD0-N~>
<~=C-HN`p-Z4I\OjI=C-HN`p-E%G+$&&4@!8*V8t#688F3h~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 94.2902 mo
139.438 94.2902 li
139.438 93.703 li
140.938 93.703 li
141.009 93.703 141.076 93.7177 141.137 93.7443 cv
141.137 94.2902 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 .941176 139.255 130.488 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 4 
/M[9 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~h;#iAK4@n]<SQ3?SpX[58kRdg\s[b?6:+#N\=eOg7Q37b~>
<~`Pp*Ph;d\]kJkNdf&#QSlKZC/cI^t;m-O)ace.:Co(MeN~>
<~"9p2GE06fdTEbcQ:j&;/X/cO7/lm=p['[1j02?MM[`$,&~>
<~!!!!%#R:J8"98E%":##/!!!!!!<`W0!!!!!!!*60"98E%~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 93.703 mo
137.137 93.703 li
137.137 92.1993 li
138.438 92.4904 li
138.438 93.703 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 2.11765 136.902 130.958 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 9 
/M[8 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&77BX?AUK`@?=$rLH]Y)5G'8%WOJ92'O,o?eVRFLoUnjfc\B!.YTV.sS[D^SRR[T\=Z,4rJ
Q'IW)Y.rBC~>
<~\@B&^aNr>b[C*ER`m3#]['[3N`66HP['[3N_TC!EXf\_1]>DP,WMul!\%]buSXl=GYIVKfNfK-bVR4(U
KnY5?Ts22J~>
<~KnY54G\U>NH$O[ZDIQL0@q0"W>#%:9:/4PX7Q`7E0ekC:.jPuA)B'M4(_R,T&J5Tf&e>6J#RC\B$k!:?
!s8W/#mpk:~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 92.4904 mo
138.438 92.4904 li
137.137 92.1993 li
137.137 91.6886 li
138.438 91.6886 li
138.438 92.4904 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 1.17647 136.902 132.37 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&4?P_p??M:&4?P_p??M:&77BX?AUK`@?=$rLH]Y)5~>
<~mdBN0jknb@mdBN0jknb@mdBN0jknb@m-O*'j5&>9jlPUahV$B(~>
<~]=Y\[Q$Qb,]=Y\[Q$Qb,]=Y\[Q$Qb,Z*CR3N,hucQ'IVnFBh3f~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 94.2902 mo
137.137 94.2902 li
137.137 93.703 li
138.438 93.703 li
138.438 92.4904 li
138.438 91.6886 li
138.438 94.2902 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 3.05882 136.902 130.488 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 13 
/M[8 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&4?P_p??M:&4?P_p??M:&77BX?AUK`@?=$rLH]Y)5G'8%WOJ92'O,o?eVRFLoUnjfc\B!.Y
TV.sS[D^SRR[T\=Z,4rJQ'IW)Y.rBCOcbcnWkQj=FEDVONhWu%~>
<~mdBN0jknb@mdBN0jknb@mdBN0jknb@m-O*'j5&>9jlPUahV$B(hr!>Ig!n?kg"G'1e'H4Xe'ldoccaAI
e^`4!ccaAIf%/F%d*0SLf@SX)dEK\Mf\"j.d`okOi8EPMg!n?k~>
<~]=Y\[Q$Qb,]=Y\[Q$Qb,]=Y\[Q$Qb,Z*CR3N,hucQ'IVnFBh3fH$O[T>XpLj?!U`:6STYn77BX00-1T'
8kM]D1*I/.:f't[2Bre6<`W6r3[PI>>?b<14t%'EI!g<`?:Q^l~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 94.2902 mo
138.438 94.2902 li
138.438 91.6886 li
139.438 91.6886 li
139.438 92.5648 li
139.438 93.703 li
139.438 94.2902 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.41176 0 0 3.05882 138.314 130.488 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 13 
/M[6 0 0 -13 0 13 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~R&6ULR?`r0SXG\%PG4V9P`M62UnF3DWOK7=XfAqO_ns4'bLP.meC3+0iSibSg>UuJi8EAKi8EPNgYq)K
hr!2Ii8<DJdacmue^X~>
<~f$i.!f%8R(e^iC+f[SI&f\+j)eC<($da-:edF-=`bKS2Tb/_QCa2l9=`5KU4`l,g6`5K[6`5KU4`Pf^5
`5T^6`5KX6aN)?Aa2\~>
<~;F<uK;-$gi9i>)"=@Z(_='\]i77pBU5;4oQ4$G5<+sSE_)%@&d%hK$I!!!!!#QOl+!<NK+!<E6'"onZ)
!WrZ-!<N?*&If3[%Li~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 159.536 mo
39.453 159.536 li
39.453 157.921 li
41.1529 158.187 li
41.1529 159.536 li
38.453 159.536 mo
37.1529 159.536 li
37.1529 155.536 li
38.453 155.536 li
38.453 157.327 li
38.4529 157.334 38.4529 157.34 38.453 157.346 cv
38.453 159.536 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 36.1529 64.4644 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 157.175 mo
39.453 156.908 li
39.453 155.536 li
41.1529 155.536 li
41.1529 157.175 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 4 38.1529 66.4644 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~UQ#K`UQ#K`iSe9ViRU:\~>
<~NdCs7NdCs7`5G\W`4J#i~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
41.1529 158.187 mo
39.453 157.921 li
39.453 156.908 li
41.1529 157.175 li
41.1529 158.187 li
38.453 157.346 mo
38.453 157.346 li
38.4529 157.34 38.4529 157.334 38.453 157.327 cv
38.453 157.327 li
38.453 157.346 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[5 0 0 4 37.1529 65.4644 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibS~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
39.453 159.536 mo
38.453 159.536 li
38.453 157.346 li
38.453 157.327 li
38.453 155.536 li
39.453 155.536 li
39.453 156.908 li
39.453 157.921 li
39.453 159.536 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 37.1529 64.4644 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
58.7724 162.301 mo
57.098 162.301 li
57.098 161.084 li
58.7724 162.301 li
56.098 162.301 mo
54.7972 162.301 li
54.7972 160.326 li
56.098 160.53 li
56.098 162.301 li
58.7972 161.083 mo
57.098 159.847 li
57.098 158.301 li
58.7972 158.301 li
58.7972 161.083 li
56.098 159.517 mo
54.7972 159.314 li
54.7972 158.301 li
56.098 158.301 li
56.098 159.517 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 53.7972 61.6991 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
58.7972 162.301 mo
58.7724 162.301 li
57.098 161.084 li
57.098 159.847 li
58.7972 161.083 li
58.7972 162.301 li
56.098 160.53 mo
54.7972 160.326 li
54.7972 159.314 li
56.098 159.517 li
56.098 160.53 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 53.7972 61.6991 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
57.098 162.301 mo
56.098 162.301 li
56.098 160.53 li
56.098 159.517 li
56.098 158.301 li
57.098 158.301 li
57.098 159.847 li
57.098 161.084 li
57.098 162.301 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 6 54.7972 61.6991 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 6 
/M[3 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.5601 170.851 mo
66.56 170.851 li
66.56 169.98 li
70.5601 169.98 li
70.5601 169.821 li
70.5601 169.821 li
70.5601 170.851 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 65.5601 53.1487 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~OHAGP5sY_\?pF\l#7"X%!!!~>
<~I=9&G3B79J<&XdW"pS$c!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.5601 169.98 mo
66.56 169.98 li
66.56 169.863 li
70.359 169.863 li
70.4305 169.863 70.4985 169.848 70.5601 169.821 cv
70.5601 169.98 li
70.5601 168.905 mo
70.4985 168.878 70.4305 168.863 70.359 168.863 cv
69.06 168.863 li
70.5601 168.121 li
70.5601 168.905 li
67.7989 168.863 mo
66.56 168.863 li
66.56 168.586 li
67.2586 168.47 li
67.7989 168.863 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4.47059 0 0 2.35294 66.3248 54.8546 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 10 
/M[19 0 0 -10 0 10 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'8%WOJ92'_nj+#Tn?oG3]]<_O,oR'[`6hGda?FMQ[)e3:f*s`UoClEe`#KGiShhVMeup4@\BBeV7"7k
iS`VNhSZ.DBO+nLR[T\=Z,4rJhqm2E^nQNp=]nmmQ'IlB^X;#th:pVrT7:0E;,NI<OdN/_d,Ej:g"3g(
GudF*7s&ipH]Fi/`koL&\=eOg7Q37b<)ch$DhFCTU7Rg<KPjjM.4H]%1G_*gA9`r`I<T[C=?n,K(`3~>
<~]=Y\h`QHEJbKS2Tb.ag0H$O\I]=YeqaN;KCaN2HC]r?p<I=8`>]=u2&`l,g6`5KX.X,_a^J[Dek\%fi"
`5KU4`5B*ZK6;<ZVl-Go\%fi!`5KU4]rmWBAS#G@R@0_N\\Q/%_o'@#UPE>Y<)ea4MNXdA^;Rq+_8*7?
GY^Ri5\XqHF,QZo\[SrNXdk&U5r1;Q:/4PeG)W)rWMH/TN-AJa-n$K"1G_:(HBFnjQ&^TEBLjBb(Dd~>
<~<)cgo8Ne[J+s\Ka5"ngH7n6'55!D(c.NK$2&J>^*3^>ee3&iKA/Lr(a%0-A.!!!le1G::1/1E"s-mBN<
!!*-&!uWO@.jcSi+X&!P*>T%`!WiH,(F1CQ*Zc@=(Ddo)&deU>!X&Z?*?H%2',(c_$k3aX#QOl-"9]5M
'F=sJ"p>&3#S.O[%1WjX%1s3\!rr<$"U,&:'cS/5*#fe6)&<Yc!s8W0"pPMU,Uk2l-mp8`)\i_b"pP~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!<E3%!!!!!!!!!!!!!!!!!*3,"pP83!!!!!!!!!!!!!!!!sf8B$OZq7!!!!!!!!!!!!!!%
#mghA#64`(!!!!!!!!!!!!*60"98E%!!!!!!!!!!!!!!!!=&r:"9\i-!!!!!!!!!!!!!!##SIXU$OZ~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
66.56 168.586 mo
66.56 167.962 li
67.2586 168.47 li
66.56 168.586 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.17647 0 0 .941176 66.3248 56.2663 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 4 
/M[5 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'8%WOH5H`Q):@QUoCksTV/-h~>
<~hr!>Ig"G'3f@/3te'cRme^`-p~>
<~H$O[T>[:W@<^T;E76`Ft8kMK,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
68.859 167.095 mo
68.859 166.851 li
69.6167 166.851 li
68.859 167.095 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.17647 0 0 .705882 68.6777 57.6781 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~PE'Z]16[`=;DOGrE`+X~>
<~_8*4:CWOQ-TRP55`3>=~>
<~5t"C>5Y+RM>#S6s@VKB~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
68.859 167.847 mo
68.859 167.095 li
69.6167 166.851 li
70.5601 166.851 li
70.5601 167.005 li
68.859 167.847 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 1.41176 68.6777 56.9722 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~PE'Z]1(slt#Et0g;DJmj#7$HQE`+Y+#6tL&Q$HOo)@m>hXJq1s:GF.A-,7*dK4RM53][~>
<~f\,3HnG)nXqq0T[kj\BEqto%!i99\*qtp9AfA>ZXpA+O[dF-_,l1+E<oZbY1guRehmd:~>
<~=C-HN`p3<mpK1aNU;lKmp\.crI\OjIp\4DZ<d'nEiU6.%4@!8*V9%3;eL)h;CQ5R3]tF~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.508 167.415 mo
66.7324 166.851 li
67.859 166.851 li
67.859 167.357 li
67.508 167.415 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.64706 0 0 .941176 66.5601 57.4428 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 4 
/M[7 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?Q&=FcN1Y4@NS!NhSWu7:(+sU.%LGAUK`@~>
<~H[CL=YeJ)<OI3,]`QG!PX1H9ocFUU$aNi5^~>
<~84Z?I91([D>[:Q68j.06E+r]W6%490EFVj2~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.859 167.67 mo
67.508 167.415 li
67.859 167.357 li
67.859 167.67 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[.941176 0 0 .705882 67.2659 57.2075 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~??M:&AUK`@H]Y)5~>
<~jknb@j5&>9hV$B(~>
<~Q$Qb,N,hucFBh3f~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
70.359 169.863 mo
66.56 169.863 li
66.56 168.863 li
67.7989 168.863 li
68.065 169.056 li
68.1523 169.12 68.2552 169.152 68.3588 169.152 cv
68.4343 169.152 68.5102 169.135 68.5807 169.1 cv
69.06 168.863 li
70.359 168.863 li
70.4305 168.863 70.4985 168.878 70.5601 168.905 cv
70.5601 169.821 li
70.4985 169.848 70.4305 169.863 70.359 169.863 cv
68.4083 168.07 mo
67.859 167.67 li
67.859 167.357 li
67.859 166.851 li
68.859 166.851 li
68.859 167.095 li
68.859 167.847 li
68.4083 168.07 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4.47059 0 0 3.52941 66.3248 54.8546 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 15 
/M[19 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&SXG\%E`+Y+#6tJr4?Q&=FcN2eR?NYO;DJmj#7!@R4@NS!NhW)4PE'Z]1(slt#=V'M:1\g;
W2#uRQ$HOo)@m>h?=$rLH]Y)5Z`pO1NG_NH,paj\G'8:qU:/(Z_8!XVK4RM53]`=_O-QTN`miJcdEo=g
H!=*A:o'n_WOU"!iSibSiQ%pUD.6s`TV.sS[D^SRi8<GK_k`$#?!Ua)R[TqT_U@E#hVHu&U4m2^=]q#T
Q(5"ldGa!=gY'94IpPuL;3@!'R&[mIiSNACf=IDr<_#YMFEDVONhWu%_S<^mTS7#J2`EZp<)d(?K9rO2
SskmsDHAbG.4I&/1HSBCG_q'$GB%4s5U70`(]~>
<~mdBN0jknb@e^iC+i99\*qtp9YmdBH'hq?N0f%A[6kj\BEqtogLmd0&mg!nR'f\,3HnG)nXqs<\9l/UUO
e'uq!fA>ZXpA+O[jlPUahV$B(d*^7hg#;2co^qe5hr!8CeBc=^bg"D^guRehmdAc]g"4^!bK%]FaN2]Z
hWF(el-n,1da-+W`5KU4`66T_iT0(\e^`4!ccaAI`5KU5bgbG/kND$Zf%/?tbfI`@`Pog@e_T?NkigXM
f@A9maMc$9`l?<Thrj:ilIabAf@%pb`5T^8`m32okN_?ti8EPMg!n?kbg"GZf]28fp@e4Dkih0fgt1$)
e^i@4n+Z_XrVc6TnF#Q%hqHlAhr*krqtp?jr;~>
<~]=Y\[Q$Qb,9i>)"I\OjIp\4Eo]=Y>5H<s*9;HR7SU;lKmp\2;3]<RWI?:R^f=C-HN`p3<mpT_!.Vi5Xt
5t4LE<d'nEiU6.%Q'IVnFBh3f1cRT_?\5,qe^`2qH$OC77kl)0,UY'4CQ5R3]tI]W>uj<I*tJnp&ed!!
G*o)$Ud[^@5;+&f!!!!!!$4C7K921V8kM]D1*I/.!<N<),"64)R@0I>:f'_A,7snW!sAfT95p,iU7t[h
<_b\&&c_t9#72kVGFbb6W`r\3;a)TC!!<E3$SGJ.U9Uu.I!g<`?:Q^l,:=up:2uH*`5KTeTV.['CK*Si
9Mnl2O/gFWg"F?``Or%-G@YH.G^l!\alDdUm/~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!<E3$!!!!!!!!!!!!!!!!<`T2"pP&-
!!!!!!!!!!!!!!$#R_"J$NL/,!!!!!!!!!!!!!-.#mU\?!!!!!!!!!!!!!!!!<ic4!!!!!!!!!!!!!!!
!!!!"#7:\="9\])!!!!!!!!!!!!!'+&e>?X$N~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
68.3588 169.152 mo
68.2552 169.152 68.1523 169.12 68.065 169.056 cv
67.7989 168.863 li
67.2586 168.47 li
66.56 167.962 li
66.56 166.851 li
66.7324 166.851 li
67.508 167.415 li
67.859 167.67 li
68.4083 168.07 li
68.859 167.847 li
70.5601 167.005 li
70.5601 168.121 li
69.06 168.863 li
68.5807 169.1 li
68.5102 169.135 68.4343 169.152 68.3588 169.152 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4.47059 0 0 2.82353 66.3248 55.5604 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 12 
/M[19 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~U8"BTSY)d_XK&1pStDsm`5KTUOH>NbQCt:VV4jKFP*i,MYHNA&I=?j/R\upQS!T"cLm+9rRW3=eFFK+8
W2-)UQA0g8K8>>>K7ef1NgcoUZ`pR2R#QuaPEV2sQ^=/7X160e_S<dbSXQ1FU8"ZfWiWP>a4/SddF#Y1
W3!2+YIV3S]>;\AiSibSiQJj?\%9/^]tM+n_opWii8<GLbItI#_SX1.`5KU8cIUt4hqm26`Pp!FcHaYX
bfn>Zf\tcGh;-K'cI:@qf%8O*e^N(&iS`VMh:C*,gtpoE~>
<~eC<!uf%&6sdF-Ile^`-obfn;ag"G'2f@A<te'uq"f[nU"dF$e+h;-i>f$i.!f%8X2gXk$-f&5KEi8*,<
daQ^sfA#-;gtLK9gt^]>g"+Ttd*^7hf@em1f@SX+f@SU'da$%[bg"D\e^i:#eC;ppda?Fdb/_TEaN2WR
daHLhd*Bq^cHOGO`5KU4`6-BPcd'h]c-=MXbK@lD`5KU5b0A8Xc-=MVbKJ)OaiD?<`5T^;bg"ATbKJ#L
aiVZG`l,g7`PopAbK@oIaMu6>a2l<@`5KX6`Q-*A`Pf^5~>
<~84Z9D9hRi54?c&!9M7W%+X&"6>[1Q=<D#D?6qC!Q>#RaJ3B;)!EH#W";*d]F:fLn<AQVc*:k!kBHZ<Om
5Xe:A<G-;lC1UsfC2.Ks?;Nm@1cRT^;dX!>=BJ[)<)c^d4Y@g#,UOs(9MnGQ7n5a,5!1YO*=i\n&eZWS
5Wh"c3%Z^6.jPuA!!!!!!#[:C0.\Y*.4H\o+rLgi!<N<))(@3h-71&_+X&!L((:0E!WrQA,UaiX*Zc+6
(Dmr$$31)."9fGZ*Z,P('+>9X%1j!T!!*0)":l4]#mLS<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!<E3$!!!!!!!!!!!!!!!!<`T2"pP&-
!!!!!!!!!!!!!!$#R_"J$NL/,!!!!!!!!!!!!!-.#mU\?~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0858 158.503 mo
94.0858 158.416 li
92.387 158.416 li
92.387 158.074 li
93.887 158.074 li
93.9577 158.074 94.0249 158.059 94.0858 158.033 cv
94.0858 158.503 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 3 91.0858 64.79 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iRU:\?pF\l?pF\l~>
<~`4J#i<&XdW<&XdW~>
<~!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
91.387 158.416 mo
90.1772 158.416 li
90.8679 158.074 li
91.387 158.074 li
91.387 158.416 li
94.0858 157.115 mo
94.0249 157.089 93.9577 157.074 93.887 157.074 cv
93.1519 157.074 li
94.0858 156.726 li
94.0858 157.115 li
90.6341 157.074 mo
90.0858 157.074 li
90.0858 155.21 li
94.0858 155.21 li
94.0858 155.659 li
91.7123 156.543 li
91.6653 156.564 li
90.6341 157.074 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 89.0858 65.79 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%5sY~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c3B7~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
92.387 158.416 mo
91.387 158.416 li
91.387 158.074 li
90.8679 158.074 li
92.0856 157.472 li
93.1519 157.074 li
93.887 157.074 li
93.9577 157.074 94.0249 157.089 94.0858 157.115 cv
94.0858 158.033 li
94.0249 158.059 93.9577 158.074 93.887 158.074 cv
92.387 158.074 li
92.387 158.416 li
90.0858 157.345 mo
90.0858 157.074 li
90.6341 157.074 li
90.0858 157.345 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 89.0858 65.79 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V5</0@q1U^iRU:\#7"X%!!!~>
<~e'l7RjQ,"I`5h62qtoLBrVZ~>
<~6pq"TO,mON!"?9Cp\0i[s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
90.1772 158.416 mo
90.0858 158.416 li
90.0858 157.345 li
90.6341 157.074 li
91.6653 156.564 li
91.7123 156.543 li
94.0858 155.659 li
94.0858 156.726 li
93.1519 157.074 li
92.0856 157.472 li
90.8679 158.074 li
90.1772 158.416 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 5 89.0858 65.79 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
92.7313 159.21 mo
92.387 159.21 li
92.387 158.416 li
94.0858 158.416 li
94.0858 158.503 li
92.7313 159.21 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 1.17647 92.2034 65.5547 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 5 
/M[9 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~GB%%g3?]4V(fa<s1a*;4"pRU`2(07E!!!!i5W'r+"TSN&83f$\(Bjd=!!~>
<~[^)ZdA2>;L+0ho8Hr;'r%1TPAQ$#\:#RC^I[\ACX//fEFa2PEPE'c?:1B~>
<~:Ja\K1)UN1%;9H^9K=%#$k.,sA5YH*#RC]_IW8af.iK<EMN3=2?pZY*1B~>
<~!!!!!#7CnI$NL/,!t,G?"pP&-!!EW4!!!!!!!!-/"TSN&!!!!%$3^D0!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
94.0858 159.21 mo
92.7313 159.21 li
94.0858 158.503 li
94.0858 159.21 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 1.17647 92.4387 65.5547 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~EFD^)+W)%5:-g][%0d"@5W'r+"TSN&5W'r+"TSN&5W'r+"TSN&~>
<~i9^7:rVc]nl1FoPqtp9fmIpMWr;HTmmIpMWr;HTmmIpMWr;HTm~>
<~J!I.[jmDI&Vn((6q#('f[`7%hrVuot[`7%hrVuot[`7%hrVuot~>
<~!!!!($O[=M!!!*/$3g\=!!!-/"TSN&!!!-/"TSN&!!!-/"TSN&~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
91.387 159.21 mo
90.0858 159.21 li
90.0858 158.461 li
90.1772 158.416 li
91.387 158.416 li
91.387 159.21 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 1.17647 89.8505 65.5547 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~1G^gK:Ln^,',)#t0L],[#6tJE,WJP+#6tJE,WJP+#6tJE,WJP+~>
<~?smAYM4h2i:/4PgI$h(M7n6'LGa,;C>?b<FLS2)nGB\7^S$BfS~>
<~2)R6P77p3D5!D/!<*Wj?6:+"1=_)5]<`W7*BQ/$5EH,u@I"6]n~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
92.387 159.21 mo
91.387 159.21 li
91.387 158.416 li
92.387 158.416 li
92.387 159.21 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.41176 0 0 1.17647 91.2623 65.5547 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G_q'$GB$c$A6i21:1%(!83fpW=&;FQ:1%(!83d~>
<~hqHlAhr*YVjQ>[jl/h*mlg<rukNV="l/h*mlg4~>
<~G@YH.G^l0:Ng?<8Vj!XHXgY-kS><9qVj!XHXgS~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
90.0858 158.461 mo
90.0858 158.416 li
90.1772 158.416 li
90.0858 158.461 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[.705882 0 0 .705882 89.8505 66.0253 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Za7!<WiDtpVZ~>
<~d*U.fdaHUndf~>
<~2)R6T5!D;"63~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.612 150.443 mo
115.91 150.443 li
115.91 150.131 li
117.612 150.131 li
117.612 148.431 li
117.612 150.443 li
114.91 150.443 mo
113.612 150.443 li
113.612 150.131 li
114.91 150.131 li
114.91 150.443 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 4 112.612 73.557 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
115.91 150.443 mo
114.91 150.443 li
114.91 150.131 li
115.91 150.131 li
115.91 150.443 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 113.612 72.557 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#@Ke%?pF\l!!~>
<~qrR5BjmE$Fr;~>
<~pQE#[P.1Jkrr~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
117.612 150.131 mo
115.91 150.131 li
115.91 148.675 li
117.612 148.431 li
117.612 150.131 li
114.91 150.131 mo
113.612 150.131 li
113.612 149.446 li
114.91 148.962 li
114.91 150.131 li
113.612 148.305 mo
113.612 146.443 li
114.91 146.443 li
114.91 147.627 li
113.612 148.305 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4.47059 0 0 4.23529 113.376 74.557 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 18 
/M[19 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&SXG\%E`+Y+#6tJr4?Q&=FcN2eR?NYO;DJmj#7!@R4@NS!NhW)4PE'Z]1(slt#=V'M:1\g;
W2#uRQ$HOo)@m>h?=$rLH]Y)5Z`pO1NG_NH,paj\G'8:qU:/(Z_8!XVK4RM53]`=_O-QTN`miJcdEo=g
H!=*A:o'n_WOU"!iSibSiQ%pUD.6s`TV.sS[D^SRi8<GK_k_rs>$>*uR[TqT_U@E#hVHu%T71*E;GrdF
Q(5"ldGa!=gY'6.GZIF/8s,6uR&[mIiSNACf=@8o=%PtTFEDVONhWu%_S<^mT8.5V5X7S6<)d(?K9rO2
SskmsEEbR\0ekI?1HSBCG_q'$GB%4s5pR<c)&!Ys)DFT_CLg^N:.IGr&-`=C#6tJE,WJP+=&;FQ4#%f`
!!!!(#6tbb3)3g^:e3i50cp]%!!!~>
<~AS#FmO/9>$^:_%dU4QJl%Lrt[AS#kBV747S]XkSHJlj6-%M!T&FFT^\]YhV%^:^J)A2>8J*fQ&:Pc;10
aN)<>`3u4`:HUa%V5:#h\AH>0b0%lL_69&??!UaG\@B2haNDZJb0.uL]VgU5H[ENB^V\"4aiDKDaN2K>
Z'UB,Mnd$A_8XI7`5KU4`5f^!R#R)b]tM+o`5fm9`5KU5`kSX<KS5#j]=Yeq`lH$9`Pog9]r6d6H@!$.
[^s;o`l,g7`Pod+U4@3%E2]_6Y.;?d`5KU4`4rI>E*lsZNK&p^V6dkP_8!^sZ_2qX:JXbuAnH"<S?00*
YcOdnM/Gd?2)R3I1dYSsP+nJ3O,&'r8gP;k(`4),-;%s'Q&UNGF(J9+&-W4@%Lrsh6=>5(Lk'Ya?:cUP
!!!!/%LsLG@""/nJ9G^78LauG!!!~>
<~1,:UC5!V1c2E3`Z5W^M1#RC\k1,:aO5W^b[3'',d4"M$N#RE^^5sn155W:_d5!__.3?o@X(f=.-;,L"R
2E<lb6VU?J3%lp<<)cgq:.7/n/ho1A7o2rK5!D/.;Gp:[4"MEr+seX"92J>S8P)9:6U3O[*=i\n&eccZ
84Z0<75-DL/gVDF!!!!!!#dIM3]K)Y1,:U=-QETr!<N<)*ABN72E!HN2)R-=*Y8;Q!sAfN1HRQP1G^mG
2)6X'&-)b7#7)J/3]&NE0IeP%.O5rC!!3</#TbQP.jZJf-n$Jm.OH5Q(`F>6-nQqm*#oq=*??:N.OcYj
-RU8k-m997%LraM#S%e".Outt-m^&W((1?P#6tJ=%j3D\3B&iP0I\1_$NpS8#RC\I+tu&A4ZbV[/0u);
!!!!)#RCtc0KMB\4#f&J,o6dd!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$$"9\i1!!!!!!!!!!!!!!!!!<K7$k*OE!!!!!!!!!!
!!!!"#7V7U%hAX?!!!!!!!!!!!!!'+'+bNZ$NL/,!!!!!!!!!!!!3TH%gE4B!!!!!!!!!!!!!!!!Y-%S
!!!!!!!!!!!!!!!!!!!#%N#NQ!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.612 148.379 mo
113.612 148.305 li
114.91 147.627 li
114.91 147.895 li
113.612 148.379 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 1.17647 113.376 76.4394 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'8%WOJ92'O,o?eVRFLoUnjfc\B!.YTV.sS[D^SRR[T\=Z,4rJ~>
<~hr!>Ig!n?kg"G'1e'H4Xe'ldoccaAIe^`4!ccaAIf%/F%d*0SL~>
<~H$O[T>XpLj?!U`:6STYn77BX00-1T'8kM]D1*I/.:f't[2Bre6~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
115.91 147.355 mo
115.91 146.443 li
117.612 146.443 li
117.612 147.117 li
115.91 147.355 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 1.41176 115.729 77.3806 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~PE'Z]1(slt#Et0g;DJmj#7$HQE`+Y+#6tL&Q$HOo)@m>hXJq1s:GF.A-,7*dK4RM53][~>
<~]!nDc=<e:c%_B-DJlj6-%M$4cWf1IE*ZcBA`3u4`:HUa%b0%Q(PAXZ3?-CF4]VgU5H[>~>
<~3]fSg//&9p#Wb%44"M$N#REU[84>N`(`4)T6VU?J3%lp<1cIp$:..904s_U>92J>S8P&~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
115.91 147.665 mo
115.91 147.355 li
117.612 147.117 li
117.612 147.421 li
115.91 147.665 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 .941176 115.729 77.1453 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 4 
/M[9 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~R[&/%3Z8M>&$2aiDGMu5,pg==Tn?oG3]]=Ld'f9d>>S-m~>
<~f%8d@me6JPq9dXDiT]n)o^pDQeD0-NmdBMaaNrJpk3;-p~>
<~;-%k.^#ADImQ<aAJu-Q=e^Z#s88F3h]tM)l'/<I0R&$OR~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
115.91 150.131 mo
114.91 150.131 li
114.91 148.962 li
115.534 148.729 li
115.91 148.675 li
115.91 150.131 li
114.91 147.895 mo
114.91 147.627 li
114.91 146.443 li
115.91 146.443 li
115.91 147.355 li
115.91 147.665 li
115.339 147.747 li
115.235 147.773 li
114.91 147.895 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.41176 0 0 4.23529 114.788 74.557 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 18 
/M[6 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~NhW)4PE(ZtSXG\%NhW)4PE(m+US"!?V73e8XJrYJ_nj+#`miJcdEpG&iSibSeD]?Chqlf?hqm2EdGa!=
gY's4hV?f9[`62!]==3+U7Rg<G_q'$GB$c$A6i21:1%(!83fpW=&;FQ~>
<~g!nR'f\+s-e^iC+g!nR'f\+m*eCE.%e'HCgdF-@abfn>VbK%]FaN2E?`5KU4a2Gp7`5Tg9`5T^7aMc$9
`l?*<`Poj:ccaPWcHk+keCE.%hqHlAhr*YVjQ>[jl/h*mlg<rukNV="~>
<~?:R^f=C,<(9i>)"?:R^f=C,&p7S?TZ6ngGW4?tVC+s\Nc*tJnp&eb`T!!!!!%fcV3!Ws#7!WrQ0&c_t9
#72%D!sT&>0cqVf.kajf7ncc]G@YH.G^l0:Ng?<8Vj!XHXgY-kS><9q~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
113.612 149.446 mo
113.612 148.379 li
114.91 147.895 li
115.235 147.773 li
115.339 147.747 li
115.91 147.665 li
117.612 147.421 li
117.612 148.431 li
115.91 148.675 li
115.534 148.729 li
114.91 148.962 li
113.612 149.446 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4.47059 0 0 2.58824 113.376 75.2629 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 11 
/M[19 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Q^=&+S><@#\@&ZIU77[LX/i:hR@0P>Xh)Qk_na!fT:2=ETqS?\VPpc3a4/SddEoM*U7nBYUpd_?\\QA<
iSibSiQA[6Y->.7[C*EO^<"j`i8<GKaLA=TZEgdBZa7'Pa4'#)hVR&,[&pR>['[-EZF.?be)B3@gY0TQ
Y-YUH\%KAd]YV_>iSWJGg;gn>_oKg<^:q=p]YDJ3bfe,L_8F@@eC<!ga2c-4]Y2.r^V@P$bLYM-i8E>C
g=46\]Xthi^;.qEhW*\Xj8~>
<~f@SX+e^W!lcHjkaeCN1!daHRpf%/F%dE]qYbfn>[e^i:#eC;sre'l[hbK%]FaN2ZTeC;sre'H@dcHOGO
`5KU4`6-BQdEp7ecd0q`c-")F`5KU5b0SJ_d*U.dd*U+`bK.W?`Pog>cdC+ccd0tbd*L"\aMc$9`Q$*J
da6=dcd'h]c-4>N`5T^8`llZRcHOMVc-=MXc-=GRai_cKd+$Rnd*U.^b0%oPcHXSXc-=M^f\+]ucHaGL
`lH6Gc-FVZc-4Yhe'#kTaT~>
<~<)cgq:.7/n/ho1A7o2rK5!D/.;Gp:[4"MEr+seX"92J>S8P)9:6U3O[*=i\n&eccZ84Z0<75-DL/gVDF
!!!!!!#dIM3]K)Y1,:U=-QETr!<N<)*ABN72E!HN2)R-=*Y8;Q!sAfN1HRQP1G^mG2)6X'&-)b7#7)J/
3]&NE0IeP%.O5rC!!3</#TbQP.jZJf-n$Jm.OH5Q(`F>6-nQqm*#oq=*??:N.OcYj-RU8k-m997%LraM
#S%e".Outt-m^&W((1?P#6~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!$$"9\i1!!!!!!!!!!!!!!!!!<K7$k*OE!!!!!!!!!!!!!!"#7V7U%hAX?
!!!!!!!!!!!!!'+'+bNZ$N~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 147.067 mo
139.438 147.067 li
139.438 146.841 li
141.137 146.841 li
141.137 144.955 li
141.137 147.067 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[4 0 0 4 138.137 76.9333 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSe9ViRU:\?pF\l?pF\l~>
<~`5G\W`4J#i<&XdW<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 147.067 mo
137.137 147.067 li
137.137 146.841 li
138.438 146.841 li
138.438 147.067 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 136.137 75.9333 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~#7"WA#@IcA?i~>
<~"pS$2##kd2;u~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 147.067 mo
138.438 147.067 li
138.438 146.841 li
139.438 146.841 li
139.438 147.067 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[3 0 0 3 137.137 75.9333 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSi;~>
<~`5KU4`5KU4_u~>
<~!!!!!!!!!!!!~>
<~!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.137 146.841 mo
139.438 146.841 li
139.438 145.1 li
141.137 144.955 li
141.137 146.841 li
141.137 143.289 mo
139.438 143.289 li
139.438 143.067 li
141.137 143.067 li
141.137 143.289 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 4.23529 139.255 77.9333 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 18 
/M[9 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~PE'Z]1(slt#Et0g;DJmj#7$HQE`+Y+#6tL&Q$HOo)@m>hXJq1s:GF.A-,7*dK4RM53]b[8[[28D:f(!I
iQ%pUD.6s`hql8HKOn=j>2@uKT71*E;Gu9&]UF(G8kM_/f=7,j<CfYO]==JfCJ6uY5ampjEEbU]0emll
Am.ML*#oqu:.IGr&-`=C83f6k*shoI!(]@:0cp]%!!!~>
<~]!nDc=<e:c%_B-DJlj6-%M$.^VMAJ.()@\'_QoPN7l)qWaN2)rNb;Bn<m&S)\Y=[uF`kdHahk?NNK&q9
`5f^"RZ<Dg`5Td3Y*4TpL;h-O^8d*=I!ioQ`k/(!F)uEA`PJjJFC\om^q[@TM.BO`;mEI"O*",Y4$/^g
JoFU;*#orGF(J9+&-W4@G&(DU.L6"S!-W-a8LauG!!!~>
<~3]fSg//&9p#Wb%44"M$N#REOV6U3CG%hB175Y=X80IA+n1GqQn8Nesi2C'Y284uE>6UMJ".mHTt7n6&L
!#dLO4?>Ma!WsGt4$,D]3!9F.1H[ZT2)PUF+uMMB1G^fm#p:oZ0.JG$*Zlpg0I@nb+=o&t0..bT'br>Q
.O6,J$O[=u0I\1_$NpS83&E04(C'p?!&ued,o6dd!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!<N<(!!!!#"pkSB#ljr+"q;.V&J5!C
!XTSV&.fBQ!!3TH%gE4B!!!'1(^^6C!!!!#%N#NQ!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 144.096 mo
139.438 143.289 li
141.137 143.289 li
141.137 143.951 li
139.438 144.096 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 1.17647 139.255 80.7569 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 5 
/M[9 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~S!S_C=\1tJ6^j<lCKO(m5s_*3KPjp_5s[f>X-A!E;b]t\^V-J%F^S?T=T~>
<~^qR"=G#(7a4i5"?RsS+&6q#)8];U^(>?b=Sb/C]\K6;<Zb0.oBYaCE0N;~>
<~5XJ1A90YBq3'p&0<)H(K5<hG%;d3I*:JXbC2b@%T=]\[+,ptiO=Bo*9>Q~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 145.1 mo
139.438 144.876 li
139.438 144.87 139.438 144.865 139.438 144.859 cv
139.438 144.096 li
141.137 143.951 li
141.137 144.955 li
139.438 145.1 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.11765 0 0 1.64706 139.255 79.5804 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 7 
/M[9 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~XJq1s:GF.A-,7*dK4RM53]b[8[[28D:f(!IiQ%pUD.6s`hql8HKOn=j>2@uKT71*E;Gu9&]UF(G8kM\
~>
<~dF-_,l1+E<oZbY1guRehmdA0;ce%%9l07HN`66T_iT0(\`5TsLgZ.GYk/G<`e_T?Nkig%+c.:e8lK[X
~>
<~4@!8*V9%3;eL)h;CQ5R3]tG$l0iW=`Unjdd!$4C7K921V!WsW8BoJIJR03^@95p,iU7ql!.St>[X/i9
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.438 146.841 mo
137.137 146.841 li
137.137 145.63 li
138.438 145.444 li
138.438 146.841 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 1.88235 136.902 77.9333 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Q'IW)Y.rBCOcbcnWkQj=FEDVONhWu%<)ch$DhFCT1G^gK:Ln^,',)#t0L],[#6tJE,WJP+#6tJE,WJP+
~>
<~\[f8`_oKg9Xf\_2]Y_Y+PEV3!Wjfa\Df9Q<NhN\g5!D/'BnD_M(`4):8n`gA%Lrsh6=>5(%Lrsh6=>5(
~>
<~2`EZQ/0GN)0/"t2-lifu0/"t40.J+]-71&g/hek*&eYfo,V1W'#6tJE+=oB1#RC\I+tu&A#RC\I+tu&A
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
137.137 144.388 mo
137.137 144.289 li
137.845 144.289 li
137.137 144.388 li
138.438 143.289 mo
137.137 143.289 li
137.137 143.067 li
138.438 143.067 li
138.438 143.289 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 1.88235 136.902 80.2863 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?P_p??M:&4?P_p??M:&4?P_p??M:&77BX?AUK`@?=$rLH]Y)5G'8%WOJ92'O,o?eVRFLoUnjfc\B!.Y
~>
<~AS#FmO/9>$AS#FmO/9>$Ci!p4Pc;41KS5#=UpRqWT:_aP[(jW&Za7!I^rFL<^qdb&a2uHD^qdb&`Q-!:
~>
<~1,:UC5!V1c1,:UC5!V1c3&il[6UO$p8P)KH9LqB*:/4PY8jYHd9MA,P6THY;6psF/2_,mZ0ekC8-5m<n
~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
137.845 144.289 mo
137.137 144.289 li
137.137 143.289 li
138.438 143.289 li
138.438 144.206 li
137.845 144.289 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 1.41176 136.902 80.5216 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 6 
/M[8 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~?=$rJF+fmX?!U`FEeB[U?XI/OFbcEdE,]c=KpJ[IJqAT0QDV.2Q'IW(WOKms~>
<~JUrB0TWu5LL5(GDUpRnVR@0J9Ye7rsXf\_2]Yqq7]Y(nl`Q?9E`Pog9b0%lI~>
<~:/4P[:J=)6;c?Uo<),hA?=$rE=]%RG>[1N;;F`_t<E3$s8N\OF8P)KB3@l3^~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
137.137 144.62 mo
137.137 144.388 li
137.845 144.289 li
138.438 144.206 li
138.438 144.434 li
137.137 144.62 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.88235 0 0 .941176 136.902 80.051 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 4 
/M[8 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'8%WOJ92'O,o?eVRFLoUnjfc\B!.YTV.sS[D^SR~>
<~hr!>Ig!n?kg"G'1e'H4Xe'ldoccaAIe^`4!ccaAI~>
<~H$O[T>XpLj?!U`:6STYn77BX00-1T'8kM]D1*I/.~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
137.137 145.63 mo
137.137 144.62 li
138.438 144.434 li
138.438 145.444 li
137.137 145.63 li
139.438 144.876 mo
139.438 144.859 li
139.438 144.865 139.438 144.87 139.438 144.876 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[2.82353 0 0 1.64706 136.902 79.1098 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 7 
/M[12 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~V5:#eZ+J'+e'cXj[^NWS^rk3diSibS['[3K^<"j`i8<GKZEgdC]Z8L[hqm5FYct@<]#E+Vhqm,@\$riW
^;n^]hqZr=\@B&X\@fc(b/q]C~>
<~e'ldpd*BhTaN2HDcd0q_bf[uE`5KU4cd0q`c-")F`5KU5d*U.cc-+2H`5T^7d*U.dcHF;I`5Ta9cd0q_
c-")F`Poj:cHa_\cHXPSb0%oN~>
<~6psF/2_,mZ&.oNg0ekC8-5m<n!!!!!1G^gA-QETr!<N<)2)R6I.NT-$!WrQ02`EZQ/0GN)!X&`70/"t2
-lifu!sJr:0/"t40.J+])B9e?~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
139.438 146.841 mo
138.438 146.841 li
138.438 145.444 li
138.438 144.434 li
138.438 143.067 li
139.438 143.067 li
139.438 143.289 li
139.438 144.096 li
139.438 144.859 li
139.438 144.876 li
139.438 145.1 li
139.438 146.841 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[1.41176 0 0 4.23529 138.314 77.9333 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 18 
/M[6 0 0 -18 0 18 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~XgGC<Y-"h5ZEUL6X0St4XK&8+Ycb%*Z+RWV['I<a`P]O,a4/SddEpG&iSibSe`#HDhqli@hqm5Fdc'*?
gY('7hqZr=`6?BGa2PU']Xtee\$riU\[o)MZ*LaGY,\S+Yd:L4XKJe6~>
<~dEg1edF$@fd*^7gda6@gdF-Iid*^:id*9k^cd9t\bKJ,SbK%]FaN2E?`5KU4a2Gp7`5Tg9`5T^7aMc$9
`l?';`Poj:bK7oLbKJ2Uc-FV[cd0n_cHaead*U+adF-Fid*L+fdF$=e~>
<~4#8cS3]fDZ2E3`Z4uG;\4?bte2`a,f2_$C51Gp['+<`!X*=i\n&eb]S!!!!!%KHM2!Wru6!WrQ0&HDk8
#71n@!sJr:+Vu%:*Zls^.P!&$0JG.5/hJq@2`<HG3^,\g3&EZ[4ZbV[~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
160.363 14.855 mo
238.746 14.855 li
238.746 65.273 li
160.363 65.273 li
160.363 14.855 li
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
.5 lw
160.363 14.855 mo
238.746 14.855 li
238.746 65.273 li
160.363 65.273 li
cp
.75021 .679683 .670222 .90164 cmyk
@
gsave
164.156 22.77 mo
196.894 22.77 li
196.894 24.77 li
164.156 24.77 li
164.156 22.77 li
clp
gsave
164 25 mo
197 25 li
197 23 li
164 23 li
164 25 li
clp
164.656 23.504 mo
167.656 23.504 li
167.932 23.504 168.156 23.7279 168.156 24.004 cv
168.156 24.2801 167.932 24.504 167.656 24.504 cv
164.656 24.504 li
164.38 24.504 164.156 24.2801 164.156 24.004 cv
164.156 23.7279 164.38 23.504 164.656 23.504 cv
170.656 23.504 mo
173.656 23.504 li
173.932 23.504 174.156 23.7279 174.156 24.004 cv
174.156 24.2801 173.932 24.504 173.656 24.504 cv
170.656 24.504 li
170.38 24.504 170.156 24.2801 170.156 24.004 cv
170.156 23.7279 170.38 23.504 170.656 23.504 cv
176.656 23.504 mo
179.656 23.504 li
179.932 23.504 180.156 23.7279 180.156 24.004 cv
180.156 24.2801 179.932 24.504 179.656 24.504 cv
176.656 24.504 li
176.38 24.504 176.156 24.2801 176.156 24.004 cv
176.156 23.7279 176.38 23.504 176.656 23.504 cv
182.656 23.504 mo
185.656 23.504 li
185.932 23.504 186.156 23.7279 186.156 24.004 cv
186.156 24.2801 185.932 24.504 185.656 24.504 cv
182.656 24.504 li
182.38 24.504 182.156 24.2801 182.156 24.004 cv
182.156 23.7279 182.38 23.504 182.656 23.504 cv
188.656 23.504 mo
191.656 23.504 li
191.932 23.504 192.156 23.7279 192.156 24.004 cv
192.156 24.2801 191.932 24.504 191.656 24.504 cv
188.656 24.504 li
188.38 24.504 188.156 24.2801 188.156 24.004 cv
188.156 23.7279 188.38 23.504 188.656 23.504 cv
194.656 23.504 mo
195.656 23.504 li
195.932 23.504 196.156 23.7279 196.156 24.004 cv
196.156 24.2801 195.932 24.504 195.656 24.504 cv
194.656 24.504 li
194.38 24.504 194.156 24.2801 194.156 24.004 cv
194.156 23.7279 194.38 23.504 194.656 23.504 cv
0 .992157 1 0 cmyk
f
grestore
grestore
182.358 26.2025 mo
178.358 26.2025 li
178.358 24.504 li
179.656 24.504 li
179.932 24.504 180.156 24.2801 180.156 24.004 cv
180.156 23.7279 179.932 23.504 179.656 23.504 cv
178.358 23.504 li
178.358 22.2026 li
182.358 22.2026 li
182.358 23.6025 li
182.235 23.6936 182.156 23.8395 182.156 24.004 cv
182.156 24.1685 182.235 24.3144 182.358 24.4055 cv
182.358 26.2025 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 177.358 197.797 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#REdb\=X$4]"7k=Df;AErUEHN#RG6:!!!91Ce"I*~>
<~6q"SY#REgd\Y'36]=\+CE,_SIs78iT#RG9<!!!91D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
179.656 24.504 mo
178.358 24.504 li
178.358 23.504 li
179.656 23.504 li
179.932 23.504 180.156 23.7279 180.156 24.004 cv
180.156 24.2801 179.932 24.504 179.656 24.504 cv
182.358 24.4055 mo
182.235 24.3144 182.156 24.1685 182.156 24.004 cv
182.156 23.8395 182.235 23.6936 182.358 23.6025 cv
182.358 24.4055 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 177.358 199.797 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
205.516 25.922 mo
205.438 25.844 li
204.953 26.156 204.391 26.328 203.781 26.328 cv
202.234 26.328 201.188 25.281 201.188 23.703 cv
201.188 22.234 202.094 21.266 203.469 21.266 cv
204.266 21.266 205.062 21.578 205.062 21.891 cv
205.062 22.469 li
205.312 22.469 li
205.328 22.062 205.359 21.781 205.469 21.25 cv
204.781 21.031 204.203 20.922 203.625 20.922 cv
202.922 20.922 202.266 21.094 201.719 21.406 cv
200.812 21.938 200.328 22.781 200.328 23.859 cv
200.328 25.578 201.594 26.75 203.469 26.75 cv
204.141 26.75 204.734 26.609 205.297 26.328 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
209.125 23.094 mo
208.672 22.906 208.453 22.844 208.172 22.844 cv
207.953 22.844 207.766 22.891 207.562 23 cv
206.859 23.359 li
206.406 23.609 206.109 24.188 206.109 24.859 cv
206.109 25.5 206.328 26.031 206.719 26.359 cv
206.984 26.578 207.359 26.688 207.891 26.688 cv
208.047 26.688 208.234 26.656 208.266 26.625 cv
209.156 25.875 li
209.109 26.625 li
209.516 26.609 209.641 26.594 209.734 26.594 cv
209.797 26.594 209.906 26.594 210.078 26.609 cv
210.125 26.609 210.297 26.609 210.453 26.625 cv
210.453 26.375 li
210.094 26.359 li
209.812 26.344 209.797 26.281 209.797 25.781 cv
209.797 20.844 li
209.719 20.781 li
209.375 20.922 209.109 20.984 208.469 21.078 cv
208.469 21.312 li
208.922 21.312 li
209.062 21.312 209.125 21.391 209.125 21.641 cv
cp
209.125 24.828 mo
209.125 25.344 209.109 25.422 209 25.609 cv
208.781 25.984 208.391 26.234 208.016 26.234 cv
207.312 26.234 206.797 25.547 206.797 24.609 cv
206.797 23.734 207.234 23.219 207.953 23.219 cv
208.266 23.219 208.578 23.328 208.859 23.516 cv
209.031 23.625 209.125 23.734 209.125 23.797 cv
cp
f
214.449 21.453 mo
214.73 21.391 214.949 21.359 215.23 21.359 cv
216.09 21.359 216.559 21.766 216.559 22.516 cv
216.559 23.234 216.074 23.75 215.371 23.75 cv
215.199 23.75 215.09 23.734 214.871 23.672 cv
214.949 23.953 li
215.152 24 215.262 24 215.418 24 cv
216.512 24 217.355 23.25 217.355 22.297 cv
217.355 21.531 216.73 21.062 215.715 21.062 cv
215.496 21.062 li
215.199 21.078 214.59 21.078 214.355 21.078 cv
214.184 21.078 214.184 21.078 212.902 21.062 cv
212.902 21.297 li
213.262 21.328 li
213.621 21.344 213.684 21.453 213.684 22.047 cv
213.684 25.641 li
213.684 26.266 213.637 26.328 213.277 26.359 cv
212.887 26.375 li
212.887 26.625 li
213.355 26.609 213.637 26.594 214.059 26.594 cv
214.48 26.594 214.762 26.609 215.23 26.625 cv
215.23 26.375 li
214.855 26.359 li
214.48 26.328 214.449 26.266 214.449 25.641 cv
cp
f
219.281 23.984 mo
219.5 23.969 219.734 23.953 220.094 23.953 cv
220.688 23.953 220.906 23.984 221.047 24.047 cv
221.109 24.25 li
221.156 24.719 li
221.391 24.719 li
221.375 23.984 221.375 23.984 221.375 23.828 cv
221.375 23.703 221.375 23.703 221.391 22.906 cv
221.156 22.906 li
221.109 23.328 li
221.047 23.531 li
220.906 23.594 220.688 23.625 220.156 23.625 cv
219.812 23.625 219.547 23.609 219.281 23.594 cv
219.281 21.453 li
219.516 21.406 219.656 21.391 220.125 21.391 cv
220.516 21.391 220.969 21.438 221.203 21.5 cv
221.406 21.547 221.422 21.594 221.422 21.781 cv
221.422 22.297 li
221.703 22.297 li
221.703 21.812 221.75 21.438 221.828 21.078 cv
221.438 21.062 221.203 21.062 220.859 21.062 cv
220 21.062 li
219.609 21.078 219.328 21.078 219.125 21.078 cv
218.906 21.078 218.906 21.078 217.719 21.062 cv
217.719 21.297 li
218.109 21.328 li
218.469 21.344 218.516 21.406 218.516 22.047 cv
218.516 25.641 li
218.516 26.266 218.469 26.328 218.109 26.359 cv
217.719 26.375 li
217.719 26.625 li
218.188 26.609 218.469 26.594 218.891 26.594 cv
219.312 26.594 219.594 26.609 220.062 26.625 cv
220.062 26.375 li
219.688 26.359 li
219.312 26.328 219.281 26.266 219.281 25.641 cv
cp
f
222.168 21.297 mo
222.559 21.328 li
222.918 21.344 222.965 21.406 222.965 22.047 cv
222.965 25.641 li
222.965 26.266 222.934 26.328 222.559 26.359 cv
222.262 26.375 li
222.262 26.625 li
222.793 26.609 223.027 26.594 223.246 26.594 cv
223.293 26.594 223.512 26.594 223.824 26.609 cv
224.934 26.625 224.934 26.625 225.105 26.625 cv
225.355 26.625 225.355 26.625 226.449 26.594 cv
226.449 26.125 226.496 25.703 226.574 25.281 cv
226.293 25.281 li
226.277 25.406 226.262 25.516 226.246 25.547 cv
226.199 25.891 226.105 26.141 225.98 26.188 cv
225.824 26.234 225.23 26.281 224.512 26.281 cv
224.105 26.281 223.949 26.266 223.73 26.219 cv
223.73 23.984 li
223.949 23.969 224.184 23.953 224.543 23.953 cv
225.137 23.953 225.355 23.984 225.496 24.047 cv
225.559 24.25 li
225.605 24.719 li
225.84 24.719 li
225.824 23.984 225.824 23.984 225.824 23.828 cv
225.824 23.703 225.824 23.703 225.84 22.906 cv
225.605 22.906 li
225.559 23.328 li
225.496 23.531 li
225.355 23.594 225.137 23.625 224.605 23.625 cv
224.262 23.625 223.996 23.609 223.73 23.594 cv
223.73 21.453 li
223.965 21.406 224.105 21.391 224.652 21.391 cv
225.121 21.391 225.559 21.438 225.824 21.5 cv
226.012 21.547 226.043 21.594 226.043 21.781 cv
226.043 22.297 li
226.309 22.297 li
226.309 21.812 226.355 21.438 226.449 21.078 cv
226.059 21.062 225.809 21.062 225.449 21.062 cv
224.652 21.062 li
224.152 21.078 223.809 21.078 223.59 21.078 cv
223.324 21.078 222.965 21.078 222.168 21.062 cv
cp
f
232.742 25.641 mo
232.742 26.266 232.711 26.328 232.336 26.359 cv
232.055 26.375 li
232.055 26.625 li
232.43 26.609 232.664 26.594 233.086 26.594 cv
233.523 26.594 233.82 26.609 234.289 26.625 cv
234.289 26.375 li
233.914 26.359 li
233.539 26.328 233.492 26.266 233.492 25.641 cv
233.492 22.047 li
233.492 21.422 233.539 21.344 233.914 21.328 cv
234.242 21.297 li
234.242 21.062 li
233.633 21.078 233.633 21.078 233.492 21.078 cv
233.383 21.078 233.383 21.078 232.742 21.062 cv
230.648 25.5 li
228.523 21.062 li
227.898 21.078 227.898 21.078 227.773 21.078 cv
227.648 21.078 227.648 21.078 227.008 21.062 cv
227.008 21.297 li
227.367 21.328 li
227.727 21.344 227.773 21.422 227.773 22.047 cv
227.773 25.641 li
227.773 26.25 227.727 26.328 227.367 26.359 cv
227.008 26.375 li
227.008 26.625 li
227.805 26.594 227.805 26.594 227.945 26.594 cv
228.055 26.594 228.055 26.594 228.898 26.625 cv
228.898 26.375 li
228.539 26.359 li
228.18 26.328 228.133 26.25 228.133 25.641 cv
228.133 21.969 li
230.367 26.703 li
230.523 26.703 li
230.586 26.578 230.633 26.453 230.68 26.328 cv
230.805 26.016 230.914 25.797 230.961 25.688 cv
232.383 22.656 li
232.492 22.422 232.602 22.234 232.742 21.969 cv
cp
f
gsave
164.156 33.77 mo
196.894 33.77 li
196.894 35.77 li
164.156 35.77 li
164.156 33.77 li
clp
gsave
164 36 mo
197 36 li
197 34 li
164 34 li
164 36 li
clp
164.656 34.211 mo
195.656 34.211 li
195.932 34.211 196.156 34.4349 196.156 34.711 cv
196.156 34.9871 195.932 35.211 195.656 35.211 cv
164.656 35.211 li
164.38 35.211 164.156 34.9871 164.156 34.711 cv
164.156 34.4349 164.38 34.211 164.656 34.211 cv
0 .992157 1 0 cmyk
f
grestore
grestore
182.358 36.9105 mo
178.358 36.9105 li
178.358 35.211 li
182.358 35.211 li
182.358 36.9105 li
182.358 34.211 mo
178.358 34.211 li
178.358 32.9106 li
182.358 32.9106 li
182.358 34.211 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 177.358 187.089 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~6USAU#REdb\=X$4]"7k=Df;AErUEHN#RG6:!!!91Ce"I*~>
<~6q"SY#REgd\Y'36]=\+CE,_SIs78iT#RG9<!!!91D+FX,~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
182.358 35.211 mo
178.358 35.211 li
178.358 34.211 li
182.358 34.211 li
182.358 35.211 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 177.358 189.089 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~rVc]nrVc]nrVc]nrVc]nrVZ~>
<~s8W-!s8W-!s8W-!s8W-!s8N~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
205.516 36.629 mo
205.438 36.551 li
204.953 36.863 204.391 37.035 203.781 37.035 cv
202.234 37.035 201.188 35.988 201.188 34.41 cv
201.188 32.941 202.094 31.973 203.469 31.973 cv
204.266 31.973 205.062 32.285 205.062 32.598 cv
205.062 33.176 li
205.312 33.176 li
205.328 32.77 205.359 32.488 205.469 31.957 cv
204.781 31.738 204.203 31.629 203.625 31.629 cv
202.922 31.629 202.266 31.801 201.719 32.113 cv
200.812 32.645 200.328 33.488 200.328 34.566 cv
200.328 36.285 201.594 37.457 203.469 37.457 cv
204.141 37.457 204.734 37.316 205.297 37.035 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
206.016 32.02 mo
206.453 32.02 li
206.609 32.02 206.656 32.098 206.656 32.348 cv
206.656 36.488 li
206.656 36.988 206.641 37.051 206.359 37.066 cv
206 37.082 li
206 37.332 li
206.797 37.301 206.797 37.301 207 37.301 cv
207.203 37.301 207.203 37.301 208 37.332 cv
208 37.082 li
207.625 37.066 li
207.359 37.051 207.328 36.988 207.328 36.488 cv
207.328 31.551 li
207.266 31.488 li
206.906 31.629 206.641 31.691 206.016 31.785 cv
cp
f
211.891 32.16 mo
212.172 32.098 212.391 32.066 212.672 32.066 cv
213.531 32.066 214 32.473 214 33.223 cv
214 33.941 213.516 34.457 212.812 34.457 cv
212.641 34.457 212.531 34.441 212.312 34.379 cv
212.391 34.66 li
212.594 34.707 212.703 34.707 212.859 34.707 cv
213.953 34.707 214.797 33.957 214.797 33.004 cv
214.797 32.238 214.172 31.77 213.156 31.77 cv
212.938 31.77 li
212.641 31.785 212.031 31.785 211.797 31.785 cv
211.625 31.785 211.625 31.785 210.344 31.77 cv
210.344 32.004 li
210.703 32.035 li
211.062 32.051 211.125 32.16 211.125 32.754 cv
211.125 36.348 li
211.125 36.973 211.078 37.035 210.719 37.066 cv
210.328 37.082 li
210.328 37.332 li
210.797 37.316 211.078 37.301 211.5 37.301 cv
211.922 37.301 212.203 37.316 212.672 37.332 cv
212.672 37.082 li
212.297 37.066 li
211.922 37.035 211.891 36.973 211.891 36.348 cv
cp
f
216.723 34.691 mo
216.941 34.676 217.176 34.66 217.535 34.66 cv
218.129 34.66 218.348 34.691 218.488 34.754 cv
218.551 34.957 li
218.598 35.426 li
218.832 35.426 li
218.816 34.691 218.816 34.691 218.816 34.535 cv
218.816 34.41 218.816 34.41 218.832 33.613 cv
218.598 33.613 li
218.551 34.035 li
218.488 34.238 li
218.348 34.301 218.129 34.332 217.598 34.332 cv
217.254 34.332 216.988 34.316 216.723 34.301 cv
216.723 32.16 li
216.957 32.113 217.098 32.098 217.566 32.098 cv
217.957 32.098 218.41 32.145 218.645 32.207 cv
218.848 32.254 218.863 32.301 218.863 32.488 cv
218.863 33.004 li
219.145 33.004 li
219.145 32.52 219.191 32.145 219.27 31.785 cv
218.879 31.77 218.645 31.77 218.301 31.77 cv
217.441 31.77 li
217.051 31.785 216.77 31.785 216.566 31.785 cv
216.348 31.785 216.348 31.785 215.16 31.77 cv
215.16 32.004 li
215.551 32.035 li
215.91 32.051 215.957 32.113 215.957 32.754 cv
215.957 36.348 li
215.957 36.973 215.91 37.035 215.551 37.066 cv
215.16 37.082 li
215.16 37.332 li
215.629 37.316 215.91 37.301 216.332 37.301 cv
216.754 37.301 217.035 37.316 217.504 37.332 cv
217.504 37.082 li
217.129 37.066 li
216.754 37.035 216.723 36.973 216.723 36.348 cv
cp
f
219.609 32.004 mo
220 32.035 li
220.359 32.051 220.406 32.113 220.406 32.754 cv
220.406 36.348 li
220.406 36.973 220.375 37.035 220 37.066 cv
219.703 37.082 li
219.703 37.332 li
220.234 37.316 220.469 37.301 220.688 37.301 cv
220.734 37.301 220.953 37.301 221.266 37.316 cv
222.375 37.332 222.375 37.332 222.547 37.332 cv
222.797 37.332 222.797 37.332 223.891 37.301 cv
223.891 36.832 223.938 36.41 224.016 35.988 cv
223.734 35.988 li
223.719 36.113 223.703 36.223 223.688 36.254 cv
223.641 36.598 223.547 36.848 223.422 36.895 cv
223.266 36.941 222.672 36.988 221.953 36.988 cv
221.547 36.988 221.391 36.973 221.172 36.926 cv
221.172 34.691 li
221.391 34.676 221.625 34.66 221.984 34.66 cv
222.578 34.66 222.797 34.691 222.938 34.754 cv
223 34.957 li
223.047 35.426 li
223.281 35.426 li
223.266 34.691 223.266 34.691 223.266 34.535 cv
223.266 34.41 223.266 34.41 223.281 33.613 cv
223.047 33.613 li
223 34.035 li
222.938 34.238 li
222.797 34.301 222.578 34.332 222.047 34.332 cv
221.703 34.332 221.438 34.316 221.172 34.301 cv
221.172 32.16 li
221.406 32.113 221.547 32.098 222.094 32.098 cv
222.562 32.098 223 32.145 223.266 32.207 cv
223.453 32.254 223.484 32.301 223.484 32.488 cv
223.484 33.004 li
223.75 33.004 li
223.75 32.52 223.797 32.145 223.891 31.785 cv
223.5 31.77 223.25 31.77 222.891 31.77 cv
222.094 31.77 li
221.594 31.785 221.25 31.785 221.031 31.785 cv
220.766 31.785 220.406 31.785 219.609 31.77 cv
cp
f
230.184 36.348 mo
230.184 36.973 230.152 37.035 229.777 37.066 cv
229.496 37.082 li
229.496 37.332 li
229.871 37.316 230.105 37.301 230.527 37.301 cv
230.965 37.301 231.262 37.316 231.73 37.332 cv
231.73 37.082 li
231.355 37.066 li
230.98 37.035 230.934 36.973 230.934 36.348 cv
230.934 32.754 li
230.934 32.129 230.98 32.051 231.355 32.035 cv
231.684 32.004 li
231.684 31.77 li
231.074 31.785 231.074 31.785 230.934 31.785 cv
230.824 31.785 230.824 31.785 230.184 31.77 cv
228.09 36.207 li
225.965 31.77 li
225.34 31.785 225.34 31.785 225.215 31.785 cv
225.09 31.785 225.09 31.785 224.449 31.77 cv
224.449 32.004 li
224.809 32.035 li
225.168 32.051 225.215 32.129 225.215 32.754 cv
225.215 36.348 li
225.215 36.957 225.168 37.035 224.809 37.066 cv
224.449 37.082 li
224.449 37.332 li
225.246 37.301 225.246 37.301 225.387 37.301 cv
225.496 37.301 225.496 37.301 226.34 37.332 cv
226.34 37.082 li
225.98 37.066 li
225.621 37.035 225.574 36.957 225.574 36.348 cv
225.574 32.676 li
227.809 37.41 li
227.965 37.41 li
228.027 37.285 228.074 37.16 228.121 37.035 cv
228.246 36.723 228.355 36.504 228.402 36.395 cv
229.824 33.363 li
229.934 33.129 230.043 32.941 230.184 32.676 cv
cp
f
gsave
164.156 44.77 mo
196.894 44.77 li
196.894 46.77 li
164.156 46.77 li
164.156 44.77 li
clp
gsave
164 46 mo
197 46 li
197 44 li
164 44 li
164 46 li
clp
164.656 44.918 mo
167.656 44.918 li
167.932 44.918 168.156 45.1418 168.156 45.418 cv
168.156 45.6942 167.932 45.918 167.656 45.918 cv
164.656 45.918 li
164.38 45.918 164.156 45.6942 164.156 45.418 cv
164.156 45.1418 164.38 44.918 164.656 44.918 cv
170.656 44.918 mo
173.656 44.918 li
173.932 44.918 174.156 45.1418 174.156 45.418 cv
174.156 45.6942 173.932 45.918 173.656 45.918 cv
170.656 45.918 li
170.38 45.918 170.156 45.6942 170.156 45.418 cv
170.156 45.1418 170.38 44.918 170.656 44.918 cv
176.656 44.918 mo
179.656 44.918 li
179.932 44.918 180.156 45.1418 180.156 45.418 cv
180.156 45.6942 179.932 45.918 179.656 45.918 cv
176.656 45.918 li
176.38 45.918 176.156 45.6942 176.156 45.418 cv
176.156 45.1418 176.38 44.918 176.656 44.918 cv
182.656 44.918 mo
185.656 44.918 li
185.932 44.918 186.156 45.1418 186.156 45.418 cv
186.156 45.6942 185.932 45.918 185.656 45.918 cv
182.656 45.918 li
182.38 45.918 182.156 45.6942 182.156 45.418 cv
182.156 45.1418 182.38 44.918 182.656 44.918 cv
188.656 44.918 mo
191.656 44.918 li
191.932 44.918 192.156 45.1418 192.156 45.418 cv
192.156 45.6942 191.932 45.918 191.656 45.918 cv
188.656 45.918 li
188.38 45.918 188.156 45.6942 188.156 45.418 cv
188.156 45.1418 188.38 44.918 188.656 44.918 cv
194.656 44.918 mo
195.656 44.918 li
195.932 44.918 196.156 45.1418 196.156 45.418 cv
196.156 45.6942 195.932 45.918 195.656 45.918 cv
194.656 45.918 li
194.38 45.918 194.156 45.6942 194.156 45.418 cv
194.156 45.1418 194.38 44.918 194.656 44.918 cv
.882353 .768627 0 0 cmyk
f
grestore
grestore
182.358 47.6186 mo
178.358 47.6186 li
178.358 45.918 li
179.656 45.918 li
179.932 45.918 180.156 45.6942 180.156 45.418 cv
180.156 45.1418 179.932 44.918 179.656 44.918 cv
178.358 44.918 li
178.358 43.6186 li
182.358 43.6186 li
182.358 45.0165 li
182.235 45.1076 182.156 45.2535 182.156 45.418 cv
182.156 45.5825 182.235 45.7284 182.358 45.8195 cv
182.358 47.6186 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 177.358 176.381 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
179.656 45.918 mo
178.358 45.918 li
178.358 44.918 li
179.656 44.918 li
179.932 44.918 180.156 45.1418 180.156 45.418 cv
180.156 45.6942 179.932 45.918 179.656 45.918 cv
182.358 45.8195 mo
182.235 45.7284 182.156 45.5825 182.156 45.418 cv
182.156 45.2535 182.235 45.1076 182.358 45.0165 cv
182.358 45.8195 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 177.358 178.381 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
205.516 47.34 mo
205.438 47.262 li
204.953 47.574 204.391 47.746 203.781 47.746 cv
202.234 47.746 201.188 46.699 201.188 45.121 cv
201.188 43.652 202.094 42.684 203.469 42.684 cv
204.266 42.684 205.062 42.996 205.062 43.309 cv
205.062 43.887 li
205.312 43.887 li
205.328 43.48 205.359 43.199 205.469 42.668 cv
204.781 42.449 204.203 42.34 203.625 42.34 cv
202.922 42.34 202.266 42.512 201.719 42.824 cv
200.812 43.355 200.328 44.199 200.328 45.277 cv
200.328 46.996 201.594 48.168 203.469 48.168 cv
204.141 48.168 204.734 48.027 205.297 47.746 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
209.125 44.512 mo
208.672 44.324 208.453 44.262 208.172 44.262 cv
207.953 44.262 207.766 44.309 207.562 44.418 cv
206.859 44.777 li
206.406 45.027 206.109 45.605 206.109 46.277 cv
206.109 46.918 206.328 47.449 206.719 47.777 cv
206.984 47.996 207.359 48.105 207.891 48.105 cv
208.047 48.105 208.234 48.074 208.266 48.043 cv
209.156 47.293 li
209.109 48.043 li
209.516 48.027 209.641 48.012 209.734 48.012 cv
209.797 48.012 209.906 48.012 210.078 48.027 cv
210.125 48.027 210.297 48.027 210.453 48.043 cv
210.453 47.793 li
210.094 47.777 li
209.812 47.762 209.797 47.699 209.797 47.199 cv
209.797 42.262 li
209.719 42.199 li
209.375 42.34 209.109 42.402 208.469 42.496 cv
208.469 42.73 li
208.922 42.73 li
209.062 42.73 209.125 42.809 209.125 43.059 cv
cp
209.125 46.246 mo
209.125 46.762 209.109 46.84 209 47.027 cv
208.781 47.402 208.391 47.652 208.016 47.652 cv
207.312 47.652 206.797 46.965 206.797 46.027 cv
206.797 45.152 207.234 44.637 207.953 44.637 cv
208.266 44.637 208.578 44.746 208.859 44.934 cv
209.031 45.043 209.125 45.152 209.125 45.215 cv
cp
f
214.449 42.871 mo
214.715 42.809 214.949 42.777 215.23 42.777 cv
216.059 42.777 216.527 43.168 216.527 43.84 cv
216.527 44.574 215.934 45.043 215.012 45.043 cv
214.777 45.043 li
214.73 45.137 li
214.824 45.23 214.84 45.262 214.934 45.371 cv
215.059 45.496 215.074 45.527 215.152 45.621 cv
216.621 47.605 li
216.949 48.043 li
217.324 48.012 217.402 48.012 217.496 48.012 cv
217.559 48.012 217.559 48.012 218.074 48.043 cv
218.074 47.793 li
217.809 47.777 217.684 47.73 217.574 47.59 cv
215.762 45.215 li
216.215 45.105 216.418 45.027 216.684 44.84 cv
217.105 44.543 217.324 44.137 217.324 43.668 cv
217.324 42.902 216.762 42.48 215.777 42.48 cv
215.637 42.48 li
214.605 42.496 214.605 42.496 214.324 42.496 cv
214.074 42.496 214.074 42.496 212.949 42.48 cv
212.949 42.715 li
213.277 42.746 li
213.637 42.762 213.684 42.84 213.684 43.465 cv
213.684 47.059 li
213.684 47.684 213.637 47.746 213.277 47.777 cv
212.887 47.793 li
212.887 48.043 li
213.355 48.027 213.637 48.012 214.059 48.012 cv
214.48 48.012 214.762 48.027 215.23 48.043 cv
215.23 47.793 li
214.855 47.777 li
214.48 47.746 214.449 47.684 214.449 47.059 cv
cp
f
221.559 47.449 mo
221.449 47.371 li
220.934 47.668 220.762 47.746 220.418 47.746 cv
219.887 47.746 219.465 47.512 219.23 47.121 cv
219.09 46.855 219.027 46.637 219.012 46.168 cv
220.184 46.168 li
220.73 46.168 221.074 46.152 221.621 46.059 cv
221.637 45.949 221.637 45.871 221.637 45.777 cv
221.637 44.855 221.043 44.262 220.152 44.262 cv
219.855 44.262 219.512 44.371 219.184 44.559 cv
218.527 44.934 218.262 45.434 218.262 46.262 cv
218.262 46.762 218.387 47.199 218.605 47.496 cv
218.918 47.918 219.465 48.168 220.059 48.168 cv
220.355 48.168 220.652 48.105 220.98 47.965 cv
221.199 47.871 221.355 47.777 221.402 47.73 cv
cp
220.934 45.871 mo
220.512 45.887 220.324 45.902 220.027 45.902 cv
219.668 45.902 219.465 45.887 219.027 45.855 cv
219.027 45.48 219.059 45.293 219.168 45.09 cv
219.324 44.746 219.668 44.527 220.059 44.527 cv
220.324 44.527 220.527 44.621 220.668 44.84 cv
220.855 45.105 220.902 45.34 220.934 45.871 cv
cp
f
224.625 42.277 mo
224.453 42.215 224.359 42.184 224.25 42.184 cv
224 42.184 223.719 42.324 223.531 42.527 cv
223.078 43.059 li
222.844 43.309 222.734 43.668 222.734 44.199 cv
222.734 44.543 li
222.188 44.793 li
222.188 44.965 li
222.734 44.934 li
222.734 47.199 li
222.734 47.699 222.719 47.762 222.438 47.777 cv
222.078 47.793 li
222.078 48.043 li
222.875 48.012 222.875 48.012 223.078 48.012 cv
223.281 48.012 223.281 48.012 224.078 48.043 cv
224.078 47.793 li
223.703 47.777 li
223.438 47.762 223.406 47.699 223.406 47.199 cv
223.406 44.934 li
224.406 44.934 li
224.453 44.512 li
223.406 44.543 li
223.406 43.855 li
223.406 42.934 223.516 42.715 223.969 42.715 cv
224.188 42.715 224.328 42.777 224.516 42.934 cv
224.625 42.887 li
cp
f
gsave
164.156 54.77 mo
196.894 54.77 li
196.894 56.77 li
164.156 56.77 li
164.156 54.77 li
clp
gsave
164 57 mo
197 57 li
197 55 li
164 55 li
164 57 li
clp
164.656 55.625 mo
195.656 55.625 li
195.932 55.625 196.156 55.8489 196.156 56.125 cv
196.156 56.4012 195.932 56.625 195.656 56.625 cv
164.656 56.625 li
164.38 56.625 164.156 56.4012 164.156 56.125 cv
164.156 55.8489 164.38 55.625 164.656 55.625 cv
.882353 .768627 0 0 cmyk
f
grestore
grestore
182.358 58.3266 mo
178.358 58.3266 li
178.358 56.625 li
182.358 56.625 li
182.358 58.3266 li
182.358 55.625 mo
178.358 55.625 li
178.358 54.3266 li
182.358 54.3266 li
182.358 55.625 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 6 177.358 165.673 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 6 
/M[6 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~4?TBu#7!@RUQ#K`V5</0@q1U^iRU:\#7"X%!!!6/?pF\l~>
<~1c15>"pQn@NdCs7OH@E!<`XWs`4J#i"pS$c!!!3-<&XdW~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
182.358 56.625 mo
178.358 56.625 li
178.358 55.625 li
182.358 55.625 li
182.358 56.625 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 225 ]ct
[6 0 0 3 177.358 167.673 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~iSibSiSibSiSibSiSibSiSa~>
<~`5KU4`5KU4`5KU4`5KU4`5D~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
205.516 58.047 mo
205.438 57.969 li
204.953 58.281 204.391 58.453 203.781 58.453 cv
202.234 58.453 201.188 57.406 201.188 55.828 cv
201.188 54.359 202.094 53.391 203.469 53.391 cv
204.266 53.391 205.062 53.703 205.062 54.016 cv
205.062 54.594 li
205.312 54.594 li
205.328 54.188 205.359 53.906 205.469 53.375 cv
204.781 53.156 204.203 53.047 203.625 53.047 cv
202.922 53.047 202.266 53.219 201.719 53.531 cv
200.812 54.062 200.328 54.906 200.328 55.984 cv
200.328 57.703 201.594 58.875 203.469 58.875 cv
204.141 58.875 204.734 58.734 205.297 58.453 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
206.016 53.438 mo
206.453 53.438 li
206.609 53.438 206.656 53.516 206.656 53.766 cv
206.656 57.906 li
206.656 58.406 206.641 58.469 206.359 58.484 cv
206 58.5 li
206 58.75 li
206.797 58.719 206.797 58.719 207 58.719 cv
207.203 58.719 207.203 58.719 208 58.75 cv
208 58.5 li
207.625 58.484 li
207.359 58.469 207.328 58.406 207.328 57.906 cv
207.328 52.969 li
207.266 52.906 li
206.906 53.047 206.641 53.109 206.016 53.203 cv
cp
f
211.891 53.578 mo
212.156 53.516 212.391 53.484 212.672 53.484 cv
213.5 53.484 213.969 53.875 213.969 54.547 cv
213.969 55.281 213.375 55.75 212.453 55.75 cv
212.219 55.75 li
212.172 55.844 li
212.266 55.938 212.281 55.969 212.375 56.078 cv
212.5 56.203 212.516 56.234 212.594 56.328 cv
214.062 58.312 li
214.391 58.75 li
214.766 58.719 214.844 58.719 214.938 58.719 cv
215 58.719 215 58.719 215.516 58.75 cv
215.516 58.5 li
215.25 58.484 215.125 58.438 215.016 58.297 cv
213.203 55.922 li
213.656 55.812 213.859 55.734 214.125 55.547 cv
214.547 55.25 214.766 54.844 214.766 54.375 cv
214.766 53.609 214.203 53.188 213.219 53.188 cv
213.078 53.188 li
212.047 53.203 212.047 53.203 211.766 53.203 cv
211.516 53.203 211.516 53.203 210.391 53.188 cv
210.391 53.422 li
210.719 53.453 li
211.078 53.469 211.125 53.547 211.125 54.172 cv
211.125 57.766 li
211.125 58.391 211.078 58.453 210.719 58.484 cv
210.328 58.5 li
210.328 58.75 li
210.797 58.734 211.078 58.719 211.5 58.719 cv
211.922 58.719 212.203 58.734 212.672 58.75 cv
212.672 58.5 li
212.297 58.484 li
211.922 58.453 211.891 58.391 211.891 57.766 cv
cp
f
219 58.156 mo
218.891 58.078 li
218.375 58.375 218.203 58.453 217.859 58.453 cv
217.328 58.453 216.906 58.219 216.672 57.828 cv
216.531 57.562 216.469 57.344 216.453 56.875 cv
217.625 56.875 li
218.172 56.875 218.516 56.859 219.062 56.766 cv
219.078 56.656 219.078 56.578 219.078 56.484 cv
219.078 55.562 218.484 54.969 217.594 54.969 cv
217.297 54.969 216.953 55.078 216.625 55.266 cv
215.969 55.641 215.703 56.141 215.703 56.969 cv
215.703 57.469 215.828 57.906 216.047 58.203 cv
216.359 58.625 216.906 58.875 217.5 58.875 cv
217.797 58.875 218.094 58.812 218.422 58.672 cv
218.641 58.578 218.797 58.484 218.844 58.438 cv
cp
218.375 56.578 mo
217.953 56.594 217.766 56.609 217.469 56.609 cv
217.109 56.609 216.906 56.594 216.469 56.562 cv
216.469 56.188 216.5 56 216.609 55.797 cv
216.766 55.453 217.109 55.234 217.5 55.234 cv
217.766 55.234 217.969 55.328 218.109 55.547 cv
218.297 55.812 218.344 56.047 218.375 56.578 cv
cp
f
222.066 52.984 mo
221.895 52.922 221.801 52.891 221.691 52.891 cv
221.441 52.891 221.16 53.031 220.973 53.234 cv
220.52 53.766 li
220.285 54.016 220.176 54.375 220.176 54.906 cv
220.176 55.25 li
219.629 55.5 li
219.629 55.672 li
220.176 55.641 li
220.176 57.906 li
220.176 58.406 220.16 58.469 219.879 58.484 cv
219.52 58.5 li
219.52 58.75 li
220.316 58.719 220.316 58.719 220.52 58.719 cv
220.723 58.719 220.723 58.719 221.52 58.75 cv
221.52 58.5 li
221.145 58.484 li
220.879 58.469 220.848 58.406 220.848 57.906 cv
220.848 55.641 li
221.848 55.641 li
221.895 55.219 li
220.848 55.25 li
220.848 54.562 li
220.848 53.641 220.957 53.422 221.41 53.422 cv
221.629 53.422 221.77 53.484 221.957 53.641 cv
222.066 53.594 li
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
